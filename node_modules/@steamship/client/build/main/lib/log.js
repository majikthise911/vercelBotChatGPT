"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LogEntry = void 0;
exports["default"] = getLogger;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _tslog = require("tslog");
var _utils = require("./utils.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function getLogger(name) {
  if ((0, _utils.isNode)()) {
    var log = new _tslog.Logger({
      minLevel: 'warn',
      // WARN
      name: name
    });
    return log;
  } else {
    var _log = new _tslog.Logger({
      suppressStdOutput: true,
      minLevel: 'warn',
      // WARN
      type: 'json'
    });
    return _log;
  }
}
var LogEntry = /*#__PURE__*/function () {
  function LogEntry() {
    (0, _classCallCheck2["default"])(this, LogEntry);
  }
  (0, _createClass2["default"])(LogEntry, null, [{
    key: "list",
    value: function () {
      var _list = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client, params, config) {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return client.post('logs/list', _objectSpread({}, params), _objectSpread({}, config));
            case 2:
              return _context.abrupt("return", _context.sent);
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function list(_x, _x2, _x3) {
        return _list.apply(this, arguments);
      }
      return list;
    }()
  }]);
  return LogEntry;
}();
exports.LogEntry = LogEntry;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRMb2dnZXIiLCJuYW1lIiwiaXNOb2RlIiwibG9nIiwiTG9nZ2VyIiwibWluTGV2ZWwiLCJzdXBwcmVzc1N0ZE91dHB1dCIsInR5cGUiLCJMb2dFbnRyeSIsImNsaWVudCIsInBhcmFtcyIsImNvbmZpZyIsInBvc3QiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2xvZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2dnZXIgfSBmcm9tICd0c2xvZyc7XG5cbmltcG9ydCB7IElBcGlCYXNlIH0gZnJvbSAnLi9zaGFyZWQvQmFzZUludGVyZmFjZXMuanMnO1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvbiB9IGZyb20gJy4vc2hhcmVkL0NvbmZpZ3VyYXRpb24uanMnO1xuaW1wb3J0IHsgVGFzayB9IGZyb20gJy4vdGFzay5qcyc7XG5pbXBvcnQgeyBpc05vZGUgfSBmcm9tICcuL3V0aWxzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0TG9nZ2VyKG5hbWU6IHN0cmluZykge1xuICBpZiAoaXNOb2RlKCkpIHtcbiAgICBjb25zdCBsb2c6IExvZ2dlciA9IG5ldyBMb2dnZXIoe1xuICAgICAgbWluTGV2ZWw6ICd3YXJuJywgLy8gV0FSTlxuICAgICAgbmFtZSxcbiAgICB9KTtcbiAgICByZXR1cm4gbG9nO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGxvZzogTG9nZ2VyID0gbmV3IExvZ2dlcih7XG4gICAgICBzdXBwcmVzc1N0ZE91dHB1dDogdHJ1ZSxcbiAgICAgIG1pbkxldmVsOiAnd2FybicsIC8vIFdBUk5cbiAgICAgIHR5cGU6ICdqc29uJyxcbiAgICB9KTtcbiAgICByZXR1cm4gbG9nO1xuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9nRW50cnlQYXJhbXMge1xuICBpZD86IHN0cmluZztcbiAgbWVzc2FnZT86IHN0cmluZztcbiAgbGV2ZWw/OiBzdHJpbmc7XG4gIHRpbWVzdGFtcDogc3RyaW5nO1xuICBwbHVnaW5JZD86IHN0cmluZztcbiAgcGx1Z2luSW5zdGFuY2VJZD86IHN0cmluZztcbiAgcGx1Z2luVmVyc2lvbklkPzogc3RyaW5nO1xuICB1c2VySWQ/OiBzdHJpbmc7XG4gIHRlbmFudElkPzogc3RyaW5nO1xuICB3b3Jrc3BhY2VJZD86IHN0cmluZztcbiAgc2Vzc2lvbklkPzogc3RyaW5nO1xuICBjb250ZXh0SWQ/OiBzdHJpbmc7XG4gIHBsdWdpbkhhbmRsZT86IHN0cmluZztcbiAgcGx1Z2luVmVyc2lvbkhhbmRsZT86IHN0cmluZztcbiAgcGx1Z2luSW5zdGFuY2VIYW5kbGU/OiBzdHJpbmc7XG4gIHVzZXJIYW5kbGU/OiBzdHJpbmc7XG4gIGludm9jYWJsZUhhbmRsZT86IHN0cmluZztcbiAgaW52b2NhYmxlVHlwZT86IHN0cmluZztcbiAgaW52b2NhYmxlVmVyc2lvbkhhbmRsZT86IHN0cmluZztcbiAgaW52b2NhYmxlSW5zdGFuY2VIYW5kbGU/OiBzdHJpbmc7XG4gIGh0dHBNZXRob2Q/OiBzdHJpbmc7XG4gIGVsYXBzZWRUaW1lU2Vjb25kcz86IHN0cmluZztcbiAgY29tcG9uZW50Pzogc3RyaW5nO1xuICBlbnZpcm9ubWVudD86IHN0cmluZztcbiAgZmlsZT86IHN0cmluZztcbiAgZnVuY3Rpb24/OiBzdHJpbmc7XG4gIGxhYmVsPzogc3RyaW5nO1xuICBsaW5lPzogc3RyaW5nO1xuICBsb2NhdGlvbj86IHN0cmluZztcbiAgcGF0aD86IHN0cmluZztcbiAgcm91dGU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9nRW50cnlMaXN0UGFyYW1zIHtcbiAgZnJvbT86IG51bWJlcjtcbiAgc2l6ZT86IG51bWJlcjtcbiAgaW52b2NhYmxlSGFuZGxlPzogc3RyaW5nO1xuICBpbnZvY2FibGVWZXJzaW9uSGFuZGxlPzogc3RyaW5nO1xuICBpbnZvY2FibGVJbnN0YW5jZUhhbmRsZT86IHN0cmluZztcbiAgaW52b2NhYmxlUGF0aD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2dFbnRyeUxpc3Qge1xuICBjb3VudD86IG51bWJlcjtcbiAgZnJvbT86IG51bWJlcjtcbiAgZW50cmllcz86IExvZ0VudHJ5UGFyYW1zW107XG59XG5cbmV4cG9ydCBjbGFzcyBMb2dFbnRyeSB7XG4gIHB1YmxpYyBzdGF0aWMgYXN5bmMgbGlzdChcbiAgICBjbGllbnQ6IElBcGlCYXNlLFxuICAgIHBhcmFtcz86IExvZ0VudHJ5TGlzdFBhcmFtcyxcbiAgICBjb25maWc/OiBDb25maWd1cmF0aW9uXG4gICk6IFByb21pc2U8VGFzazxMb2dFbnRyeUxpc3Q+PiB7XG4gICAgcmV0dXJuIChhd2FpdCBjbGllbnQucG9zdChcbiAgICAgICdsb2dzL2xpc3QnLFxuICAgICAgeyAuLi5wYXJhbXMgfSxcbiAgICAgIHtcbiAgICAgICAgLi4uY29uZmlnLFxuICAgICAgfVxuICAgICkpIGFzIFRhc2s8TG9nRW50cnlMaXN0PjtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFLQTtBQUFvQztBQUFBO0FBRXJCLFNBQVNBLFNBQVMsQ0FBQ0MsSUFBWSxFQUFFO0VBQzlDLElBQUksSUFBQUMsYUFBTSxHQUFFLEVBQUU7SUFDWixJQUFNQyxHQUFXLEdBQUcsSUFBSUMsYUFBTSxDQUFDO01BQzdCQyxRQUFRLEVBQUUsTUFBTTtNQUFFO01BQ2xCSixJQUFJLEVBQUpBO0lBQ0YsQ0FBQyxDQUFDO0lBQ0YsT0FBT0UsR0FBRztFQUNaLENBQUMsTUFBTTtJQUNMLElBQU1BLElBQVcsR0FBRyxJQUFJQyxhQUFNLENBQUM7TUFDN0JFLGlCQUFpQixFQUFFLElBQUk7TUFDdkJELFFBQVEsRUFBRSxNQUFNO01BQUU7TUFDbEJFLElBQUksRUFBRTtJQUNSLENBQUMsQ0FBQztJQUNGLE9BQU9KLElBQUc7RUFDWjtBQUNGO0FBQUMsSUFtRFlLLFFBQVE7RUFBQTtJQUFBO0VBQUE7RUFBQTtJQUFBO0lBQUE7TUFBQSwwRkFDbkIsaUJBQ0VDLE1BQWdCLEVBQ2hCQyxNQUEyQixFQUMzQkMsTUFBc0I7UUFBQTtVQUFBO1lBQUE7Y0FBQTtjQUFBLE9BRVJGLE1BQU0sQ0FBQ0csSUFBSSxDQUN2QixXQUFXLG9CQUNORixNQUFNLHFCQUVOQyxNQUFNLEVBRVo7WUFBQTtjQUFBO1lBQUE7WUFBQTtjQUFBO1VBQUE7UUFBQTtNQUFBLENBQ0Y7TUFBQTtRQUFBO01BQUE7TUFBQTtJQUFBO0VBQUE7RUFBQTtBQUFBO0FBQUEifQ==