"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PackageVersion = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _file = require("./file.js");
var _file2 = require("./types/file.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _EXPECT = function _EXPECT(client, data) {
  return new PackageVersion(client, data);
};
var _EXPECT_LIST = function _EXPECT_LIST(client, data) {
  if (!data) {
    return [];
  }
  return {
    packageVersions: data.packageVersions.map(function (x) {
      return _EXPECT(client, x);
    })
  };
};
var PackageVersion = /*#__PURE__*/function () {
  function PackageVersion(client, params) {
    (0, _classCallCheck2["default"])(this, PackageVersion);
    (0, _defineProperty2["default"])(this, "id", void 0);
    (0, _defineProperty2["default"])(this, "handle", void 0);
    (0, _defineProperty2["default"])(this, "packageId", void 0);
    (0, _defineProperty2["default"])(this, "createdAt", void 0);
    (0, _defineProperty2["default"])(this, "updatedAt", void 0);
    (0, _defineProperty2["default"])(this, "isDefault", void 0);
    (0, _defineProperty2["default"])(this, "description", void 0);
    (0, _defineProperty2["default"])(this, "client", void 0);
    (0, _defineProperty2["default"])(this, "configTemplate", void 0);
    this.client = client;
    this.id = params.id;
    this.handle = params.handle;
    this.packageId = params.packageId;
    this.createdAt = params.createdAt;
    this.updatedAt = params.updatedAt;
    this.isDefault = params.isDefault;
    this.description = params.description;
    this.configTemplate = params.configTemplate;
  }
  (0, _createClass2["default"])(PackageVersion, null, [{
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client, params, config) {
        var buffer;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (params.filename) {
                _context.next = 2;
                break;
              }
              throw Error('A filename must be provided to create a new package version.');
            case 2:
              if (params.filename.toLowerCase().endsWith('.zip')) {
                _context.next = 4;
                break;
              }
              throw Error('Only .zip archives can be used to create a new package version.');
            case 4:
              buffer = undefined;
              _context.next = 7;
              return (0, _file.readFile)(params.filename);
            case 7:
              buffer = _context.sent;
              _context.next = 10;
              return client.post('package/version/create', {
                type: 'file',
                handle: params.handle,
                mimeType: _file2.MimeTypes.ZIP,
                packageId: params.packageId,
                configTemplate: JSON.stringify(params.configTemplate)
              }, _objectSpread(_objectSpread({}, config), {}, {
                expect: _EXPECT,
                responsePath: 'packageVersion',
                file: buffer,
                filename: params.filename
              }));
            case 10:
              return _context.abrupt("return", _context.sent);
            case 11:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function create(_x, _x2, _x3) {
        return _create.apply(this, arguments);
      }
      return create;
    }()
  }, {
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, params, config) {
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return client.post('package/version/get', _objectSpread({}, params), _objectSpread({
                expect: _EXPECT,
                responsePath: 'packageVersion'
              }, config));
            case 2:
              return _context2.abrupt("return", _context2.sent);
            case 3:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function get(_x4, _x5, _x6) {
        return _get.apply(this, arguments);
      }
      return get;
    }()
  }, {
    key: "list",
    value: function () {
      var _list = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client, params, config) {
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return client.post('package/version/list', _objectSpread({}, params), _objectSpread({
                expect: _EXPECT_LIST
              }, config));
            case 2:
              return _context3.abrupt("return", _context3.sent);
            case 3:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function list(_x7, _x8, _x9) {
        return _list.apply(this, arguments);
      }
      return list;
    }()
  }]);
  return PackageVersion;
}();
exports.PackageVersion = PackageVersion;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfRVhQRUNUIiwiY2xpZW50IiwiZGF0YSIsIlBhY2thZ2VWZXJzaW9uIiwiX0VYUEVDVF9MSVNUIiwicGFja2FnZVZlcnNpb25zIiwibWFwIiwieCIsInBhcmFtcyIsImlkIiwiaGFuZGxlIiwicGFja2FnZUlkIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0IiwiaXNEZWZhdWx0IiwiZGVzY3JpcHRpb24iLCJjb25maWdUZW1wbGF0ZSIsImNvbmZpZyIsImZpbGVuYW1lIiwiRXJyb3IiLCJ0b0xvd2VyQ2FzZSIsImVuZHNXaXRoIiwiYnVmZmVyIiwidW5kZWZpbmVkIiwicmVhZEZpbGUiLCJwb3N0IiwidHlwZSIsIm1pbWVUeXBlIiwiTWltZVR5cGVzIiwiWklQIiwiSlNPTiIsInN0cmluZ2lmeSIsImV4cGVjdCIsInJlc3BvbnNlUGF0aCIsImZpbGUiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL3BhY2thZ2VfdmVyc2lvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWFkRmlsZSB9IGZyb20gJy4vZmlsZS5qcyc7XG5pbXBvcnQgeyBJQXBpQmFzZSB9IGZyb20gJy4vc2hhcmVkL0Jhc2VJbnRlcmZhY2VzLmpzJztcbmltcG9ydCB7IENvbmZpZ3VyYXRpb24gfSBmcm9tICcuL3NoYXJlZC9Db25maWd1cmF0aW9uLmpzJztcbmltcG9ydCB7IFRhc2sgfSBmcm9tICcuL3Rhc2suanMnO1xuaW1wb3J0IHsgTWltZVR5cGVzIH0gZnJvbSAnLi90eXBlcy9maWxlLmpzJztcblxuY29uc3QgX0VYUEVDVCA9IChjbGllbnQ6IElBcGlCYXNlLCBkYXRhOiB1bmtub3duKSA9PiB7XG4gIHJldHVybiBuZXcgUGFja2FnZVZlcnNpb24oY2xpZW50LCBkYXRhIGFzIFBhY2thZ2VWZXJzaW9uUGFyYW1zKTtcbn07XG5cbmNvbnN0IF9FWFBFQ1RfTElTVCA9IChjbGllbnQ6IElBcGlCYXNlLCBkYXRhOiB1bmtub3duKSA9PiB7XG4gIGlmICghZGF0YSkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHBhY2thZ2VWZXJzaW9uczogKChkYXRhIGFzIGFueSkucGFja2FnZVZlcnNpb25zIGFzIEFycmF5PGFueT4pLm1hcCgoeCkgPT5cbiAgICAgIF9FWFBFQ1QoY2xpZW50LCB4KVxuICAgICksXG4gIH07XG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIEdldFBhcmFtcyB7XG4gIGlkPzogc3RyaW5nO1xuICBoYW5kbGU/OiBzdHJpbmc7XG4gIHBhY2thZ2VJZD86IHN0cmluZztcbiAgcGFja2FnZUhhbmRsZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQYWNrYWdlVmVyc2lvbkxpc3RQYXJhbXMge1xuICBwYWNrYWdlSWQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFja2FnZVZlcnNpb25MaXN0IHtcbiAgcGFja2FnZVZlcnNpb25zOiBQYWNrYWdlVmVyc2lvbltdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBhY2thZ2VWZXJzaW9uUGFyYW1zIHtcbiAgaWQ/OiBzdHJpbmc7XG4gIGhhbmRsZT86IHN0cmluZztcbiAgcGFja2FnZUlkPzogc3RyaW5nO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgY3JlYXRlZEF0Pzogc3RyaW5nO1xuICB1cGRhdGVkQXQ/OiBzdHJpbmc7XG4gIGlzRGVmYXVsdD86IGJvb2xlYW47XG4gIGNvbmZpZ1RlbXBsYXRlPzogUmVjb3JkPHN0cmluZywgYW55Pjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDcmVhdGVQYXJhbXMge1xuICBmaWxlbmFtZTogc3RyaW5nO1xuICBwYWNrYWdlSWQ6IHN0cmluZztcbiAgaGFuZGxlPzogc3RyaW5nO1xuICBjb25maWdUZW1wbGF0ZT86IFJlY29yZDxzdHJpbmcsIGFueT47XG59XG5cbmV4cG9ydCBjbGFzcyBQYWNrYWdlVmVyc2lvbiB7XG4gIGlkPzogc3RyaW5nO1xuICBoYW5kbGU/OiBzdHJpbmc7XG4gIHBhY2thZ2VJZD86IHN0cmluZztcbiAgY3JlYXRlZEF0Pzogc3RyaW5nO1xuICB1cGRhdGVkQXQ/OiBzdHJpbmc7XG4gIGlzRGVmYXVsdD86IGJvb2xlYW47XG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBjbGllbnQ6IElBcGlCYXNlO1xuICBjb25maWdUZW1wbGF0ZT86IFJlY29yZDxzdHJpbmcsIGFueT47XG5cbiAgY29uc3RydWN0b3IoY2xpZW50OiBJQXBpQmFzZSwgcGFyYW1zOiBQYWNrYWdlVmVyc2lvblBhcmFtcykge1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgIHRoaXMuaWQgPSBwYXJhbXMuaWQ7XG4gICAgdGhpcy5oYW5kbGUgPSBwYXJhbXMuaGFuZGxlO1xuICAgIHRoaXMucGFja2FnZUlkID0gcGFyYW1zLnBhY2thZ2VJZDtcbiAgICB0aGlzLmNyZWF0ZWRBdCA9IHBhcmFtcy5jcmVhdGVkQXQ7XG4gICAgdGhpcy51cGRhdGVkQXQgPSBwYXJhbXMudXBkYXRlZEF0O1xuICAgIHRoaXMuaXNEZWZhdWx0ID0gcGFyYW1zLmlzRGVmYXVsdDtcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gcGFyYW1zLmRlc2NyaXB0aW9uO1xuICAgIHRoaXMuY29uZmlnVGVtcGxhdGUgPSBwYXJhbXMuY29uZmlnVGVtcGxhdGU7XG4gIH1cblxuICBzdGF0aWMgYXN5bmMgY3JlYXRlKFxuICAgIGNsaWVudDogSUFwaUJhc2UsXG4gICAgcGFyYW1zOiBDcmVhdGVQYXJhbXMsXG4gICAgY29uZmlnPzogQ29uZmlndXJhdGlvblxuICApOiBQcm9taXNlPFRhc2s8UGFja2FnZVZlcnNpb24+PiB7XG4gICAgaWYgKCFwYXJhbXMuZmlsZW5hbWUpIHtcbiAgICAgIHRocm93IEVycm9yKFxuICAgICAgICAnQSBmaWxlbmFtZSBtdXN0IGJlIHByb3ZpZGVkIHRvIGNyZWF0ZSBhIG5ldyBwYWNrYWdlIHZlcnNpb24uJ1xuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKCFwYXJhbXMuZmlsZW5hbWUudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnLnppcCcpKSB7XG4gICAgICB0aHJvdyBFcnJvcihcbiAgICAgICAgJ09ubHkgLnppcCBhcmNoaXZlcyBjYW4gYmUgdXNlZCB0byBjcmVhdGUgYSBuZXcgcGFja2FnZSB2ZXJzaW9uLidcbiAgICAgICk7XG4gICAgfVxuICAgIGxldCBidWZmZXI6IEJ1ZmZlciB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcblxuICAgIGJ1ZmZlciA9IGF3YWl0IHJlYWRGaWxlKHBhcmFtcy5maWxlbmFtZSk7XG5cbiAgICByZXR1cm4gKGF3YWl0IGNsaWVudC5wb3N0KFxuICAgICAgJ3BhY2thZ2UvdmVyc2lvbi9jcmVhdGUnLFxuICAgICAge1xuICAgICAgICB0eXBlOiAnZmlsZScsXG4gICAgICAgIGhhbmRsZTogcGFyYW1zLmhhbmRsZSxcbiAgICAgICAgbWltZVR5cGU6IE1pbWVUeXBlcy5aSVAsXG4gICAgICAgIHBhY2thZ2VJZDogcGFyYW1zLnBhY2thZ2VJZCxcbiAgICAgICAgY29uZmlnVGVtcGxhdGU6IEpTT04uc3RyaW5naWZ5KHBhcmFtcy5jb25maWdUZW1wbGF0ZSksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAuLi5jb25maWcsXG4gICAgICAgIGV4cGVjdDogX0VYUEVDVCxcbiAgICAgICAgcmVzcG9uc2VQYXRoOiAncGFja2FnZVZlcnNpb24nLFxuICAgICAgICBmaWxlOiBidWZmZXIsXG4gICAgICAgIGZpbGVuYW1lOiBwYXJhbXMuZmlsZW5hbWUsXG4gICAgICB9XG4gICAgKSkgYXMgVGFzazxQYWNrYWdlVmVyc2lvbj47XG4gIH1cblxuICBzdGF0aWMgYXN5bmMgZ2V0KFxuICAgIGNsaWVudDogSUFwaUJhc2UsXG4gICAgcGFyYW1zPzogR2V0UGFyYW1zLFxuICAgIGNvbmZpZz86IENvbmZpZ3VyYXRpb25cbiAgKTogUHJvbWlzZTxUYXNrPFBhY2thZ2VWZXJzaW9uPj4ge1xuICAgIHJldHVybiAoYXdhaXQgY2xpZW50LnBvc3QoXG4gICAgICAncGFja2FnZS92ZXJzaW9uL2dldCcsXG4gICAgICB7IC4uLnBhcmFtcyB9LFxuICAgICAge1xuICAgICAgICBleHBlY3Q6IF9FWFBFQ1QsXG4gICAgICAgIHJlc3BvbnNlUGF0aDogJ3BhY2thZ2VWZXJzaW9uJyxcbiAgICAgICAgLi4uY29uZmlnLFxuICAgICAgfVxuICAgICkpIGFzIFRhc2s8UGFja2FnZVZlcnNpb24+O1xuICB9XG5cbiAgc3RhdGljIGFzeW5jIGxpc3QoXG4gICAgY2xpZW50OiBJQXBpQmFzZSxcbiAgICBwYXJhbXM/OiBQYWNrYWdlVmVyc2lvbkxpc3RQYXJhbXMsXG4gICAgY29uZmlnPzogQ29uZmlndXJhdGlvblxuICApOiBQcm9taXNlPFRhc2s8UGFja2FnZVZlcnNpb25MaXN0Pj4ge1xuICAgIHJldHVybiAoYXdhaXQgY2xpZW50LnBvc3QoXG4gICAgICAncGFja2FnZS92ZXJzaW9uL2xpc3QnLFxuICAgICAgeyAuLi5wYXJhbXMgfSxcbiAgICAgIHtcbiAgICAgICAgZXhwZWN0OiBfRVhQRUNUX0xJU1QsXG4gICAgICAgIC4uLmNvbmZpZyxcbiAgICAgIH1cbiAgICApKSBhcyBUYXNrPFBhY2thZ2VWZXJzaW9uTGlzdD47XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFJQTtBQUE0QztBQUFBO0FBRTVDLElBQU1BLE9BQU8sR0FBRyxTQUFWQSxPQUFPLENBQUlDLE1BQWdCLEVBQUVDLElBQWEsRUFBSztFQUNuRCxPQUFPLElBQUlDLGNBQWMsQ0FBQ0YsTUFBTSxFQUFFQyxJQUFJLENBQXlCO0FBQ2pFLENBQUM7QUFFRCxJQUFNRSxZQUFZLEdBQUcsU0FBZkEsWUFBWSxDQUFJSCxNQUFnQixFQUFFQyxJQUFhLEVBQUs7RUFDeEQsSUFBSSxDQUFDQSxJQUFJLEVBQUU7SUFDVCxPQUFPLEVBQUU7RUFDWDtFQUNBLE9BQU87SUFDTEcsZUFBZSxFQUFJSCxJQUFJLENBQVNHLGVBQWUsQ0FBZ0JDLEdBQUcsQ0FBQyxVQUFDQyxDQUFDO01BQUEsT0FDbkVQLE9BQU8sQ0FBQ0Ms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