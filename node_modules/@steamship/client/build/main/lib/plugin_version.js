"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PluginVersion = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _file = require("./file.js");
var _file2 = require("./types/file.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _EXPECT = function _EXPECT(client, data) {
  return new PluginVersion(client, data);
};
var _EXPECT_LIST = function _EXPECT_LIST(client, data) {
  if (!data) {
    return [];
  }
  return {
    pluginVersions: data.pluginVersions.map(function (x) {
      return _EXPECT(client, x);
    })
  };
};
var PluginVersion = /*#__PURE__*/function () {
  function PluginVersion(client, params) {
    (0, _classCallCheck2["default"])(this, PluginVersion);
    (0, _defineProperty2["default"])(this, "id", void 0);
    (0, _defineProperty2["default"])(this, "handle", void 0);
    (0, _defineProperty2["default"])(this, "pluginId", void 0);
    (0, _defineProperty2["default"])(this, "createdAt", void 0);
    (0, _defineProperty2["default"])(this, "updatedAt", void 0);
    (0, _defineProperty2["default"])(this, "isDefault", void 0);
    (0, _defineProperty2["default"])(this, "description", void 0);
    (0, _defineProperty2["default"])(this, "client", void 0);
    (0, _defineProperty2["default"])(this, "configTemplate", void 0);
    this.client = client;
    this.id = params.id;
    this.handle = params.handle;
    this.pluginId = params.pluginId;
    this.createdAt = params.createdAt;
    this.updatedAt = params.updatedAt;
    this.isDefault = params.isDefault;
    this.description = params.description;
    this.configTemplate = params.configTemplate;
  }
  (0, _createClass2["default"])(PluginVersion, [{
    key: "delete",
    value: function () {
      var _delete2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(config) {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.client.post('plugin/version/delete', {
                id: this.id
              }, _objectSpread({
                expect: _EXPECT,
                responsePath: 'pluginVersion'
              }, config));
            case 2:
              return _context.abrupt("return", _context.sent);
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function _delete(_x) {
        return _delete2.apply(this, arguments);
      }
      return _delete;
    }()
  }], [{
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, params, config) {
        var buffer;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (params.filename) {
                _context2.next = 2;
                break;
              }
              throw Error('A filename must be provided to create a new plugin version.');
            case 2:
              if (params.filename.toLowerCase().endsWith('.zip')) {
                _context2.next = 4;
                break;
              }
              throw Error('Only .zip archives can be used to create a new plugin version.');
            case 4:
              buffer = undefined;
              _context2.next = 7;
              return (0, _file.readFile)(params.filename);
            case 7:
              buffer = _context2.sent;
              _context2.next = 10;
              return client.post('plugin/version/create', {
                type: 'file',
                handle: params.handle,
                mimeType: _file2.MimeTypes.ZIP,
                pluginId: params.pluginId,
                configTemplate: JSON.stringify(params.configTemplate)
              }, _objectSpread(_objectSpread({}, config), {}, {
                expect: _EXPECT,
                responsePath: 'pluginVersion',
                file: buffer,
                filename: params.filename
              }));
            case 10:
              return _context2.abrupt("return", _context2.sent);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function create(_x2, _x3, _x4) {
        return _create.apply(this, arguments);
      }
      return create;
    }()
  }, {
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client, params, config) {
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return client.post('plugin/version/get', _objectSpread({}, params), _objectSpread({
                expect: _EXPECT,
                responsePath: 'pluginVersion'
              }, config));
            case 2:
              return _context3.abrupt("return", _context3.sent);
            case 3:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function get(_x5, _x6, _x7) {
        return _get.apply(this, arguments);
      }
      return get;
    }()
  }, {
    key: "list",
    value: function () {
      var _list = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, params, config) {
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return client.post('plugin/version/list', _objectSpread({}, params), _objectSpread({
                expect: _EXPECT_LIST
              }, config));
            case 2:
              return _context4.abrupt("return", _context4.sent);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
      function list(_x8, _x9, _x10) {
        return _list.apply(this, arguments);
      }
      return list;
    }()
  }]);
  return PluginVersion;
}();
exports.PluginVersion = PluginVersion;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,