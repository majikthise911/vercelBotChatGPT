"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_CONFIG = exports.CONFIG_FILENAME = void 0;
exports.loadConfiguration = loadConfiguration;
exports.saveConfiguration = saveConfiguration;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _utils = require("../utils.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var DEFAULT_CONFIG = {
  apiBase: 'https://api.steamship.com/api/v1/',
  appBase: 'https://steamship.run/',
  webBase: 'https://app.steamship.com/'
};

// const defaultStagingCredentials = {
//   apiBase: "https://api.staging.steamship.com/api/v1",
//   appBase: "https://staging.steamship.com/api/v1"
// }
exports.DEFAULT_CONFIG = DEFAULT_CONFIG;
var CONFIG_FILENAME = '.steamship.json';
exports.CONFIG_FILENAME = CONFIG_FILENAME;
var ConfigManager = /*#__PURE__*/function () {
  function ConfigManager() {
    (0, _classCallCheck2["default"])(this, ConfigManager);
    (0, _defineProperty2["default"])(this, "_readFile", undefined);
    (0, _defineProperty2["default"])(this, "_writeFile", undefined);
    (0, _defineProperty2["default"])(this, "_configSearchPath", []);
    (0, _defineProperty2["default"])(this, "_config", {});
  }
  (0, _createClass2["default"])(ConfigManager, [{
    key: "prepare",
    value: function () {
      var _prepare = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
        var fs, os, path;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return Promise.resolve().then(function () {
                return _interopRequireWildcard(require('fs'));
              });
            case 3:
              fs = _context.sent;
              this._readFile = function (filePath) {
                if (!fs.existsSync(filePath)) {
                  return undefined;
                }
                return fs.readFileSync(filePath, 'utf8');
              };
              this._writeFile = function (filePath, data) {
                fs.writeFileSync(filePath, data);
              };
              _context.next = 11;
              break;
            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](0);
              // Running from the browser
              this._readFile = function () {
                return undefined;
              };
            case 11:
              _context.prev = 11;
              if (!(0, _utils.isNode)()) {
                _context.next = 20;
                break;
              }
              _context.next = 15;
              return Promise.resolve().then(function () {
                return _interopRequireWildcard(require('os'));
              });
            case 15:
              os = _context.sent;
              _context.next = 18;
              return Promise.resolve().then(function () {
                return _interopRequireWildcard(require('path'));
              });
            case 18:
              path = _context.sent;
              // Try the home folder last.
              this._configSearchPath.push(path.join(os.homedir(), CONFIG_FILENAME));
            case 20:
              _context.next = 26;
              break;
            case 22:
              _context.prev = 22;
              _context.t1 = _context["catch"](11);
              console.log(_context.t1);
              console.log('Unable to load config from search path');
              // pass
            case 26:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[0, 8], [11, 22]]);
      }));
      function prepare() {
        return _prepare.apply(this, arguments);
      }
      return prepare;
    }()
  }, {
    key: "_read",
    value: function () {
      var _read2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(filePath, profile) {
        var str, json;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (filePath) {
                _context2.next = 2;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 2:
              if ((0, _utils.isNode)()) {
                _context2.next = 4;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 4:
              if (!(typeof this._readFile == 'undefined')) {
                _context2.next = 6;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 6:
              str = this._readFile(filePath);
              if (str) {
                _context2.next = 9;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 9:
              // Let the parsing error trickle up!
              // We want the user to know their config has a problem.
              json = JSON.parse(str);
              if (!profile) {
                _context2.next = 18;
                break;
              }
              if (json['profiles']) {
                _context2.next = 13;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 13:
              if (json['profiles'][profile]) {
                _context2.next = 15;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 15:
              return _context2.abrupt("return", json['profiles'][profile]);
            case 18:
              return _context2.abrupt("return", json);
            case 19:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function _read(_x, _x2) {
        return _read2.apply(this, arguments);
      }
      return _read;
    }()
  }, {
    key: "clear",
    value: function clear() {
      this._config = {
        apiBase: DEFAULT_CONFIG.apiBase,
        appBase: DEFAULT_CONFIG.appBase,
        webBase: DEFAULT_CONFIG.webBase
      };
    }
  }, {
    key: "loadFromFile",
    value: function () {
      var _loadFromFile = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(filename, profile) {
        var config;
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if (filename) {
                _context3.next = 2;
                break;
              }
              return _context3.abrupt("return", false);
            case 2:
              _context3.next = 4;
              return this._read(filename, profile);
            case 4:
              config = _context3.sent;
              if (config) {
                _context3.next = 7;
                break;
              }
              return _context3.abrupt("return", false);
            case 7:
              if (config.apiBase) {
                this._config.apiBase = config.apiBase;
              }
              if (config.appBase) {
                this._config.appBase = config.appBase;
              }
              if (config.webBase) {
                this._config.webBase = config.webBase;
              }
              if (config.apiKey) {
                this._config.apiKey = config.apiKey;
              }
              if (config.workspaceId) {
                this._config.workspaceId = config.workspaceId;
              }
              if (config.workspaceHandle) {
                this._config.workspaceHandle = config.workspaceHandle;
              }
              return _context3.abrupt("return", true);
            case 14:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function loadFromFile(_x3, _x4) {
        return _loadFromFile.apply(this, arguments);
      }
      return loadFromFile;
    }()
  }, {
    key: "tryAutofindingFiles",
    value: function () {
      var _tryAutofindingFiles = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(profile) {
        var _iterator, _step, configPath, found;
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _iterator = _createForOfIteratorHelper(this._configSearchPath);
              _context4.prev = 1;
              _iterator.s();
            case 3:
              if ((_step = _iterator.n()).done) {
                _context4.next = 12;
                break;
              }
              configPath = _step.value;
              _context4.next = 7;
              return this.loadFromFile(configPath, profile);
            case 7:
              found = _context4.sent;
              if (!found) {
                _context4.next = 10;
                break;
              }
              return _context4.abrupt("return", true);
            case 10:
              _context4.next = 3;
              break;
            case 12:
              _context4.next = 17;
              break;
            case 14:
              _context4.prev = 14;
              _context4.t0 = _context4["catch"](1);
              _iterator.e(_context4.t0);
            case 17:
              _context4.prev = 17;
              _iterator.f();
              return _context4.finish(17);
            case 20:
              return _context4.abrupt("return", false);
            case 21:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this, [[1, 14, 17, 20]]);
      }));
      function tryAutofindingFiles(_x5) {
        return _tryAutofindingFiles.apply(this, arguments);
      }
      return tryAutofindingFiles;
    }()
  }, {
    key: "loadEnvVars",
    value: function () {
      var _loadEnvVars = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5() {
        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              if (typeof process != 'undefined' && typeof process.env != 'undefined') {
                try {
                  if (process.env['STEAMSHIP_API_BASE']) {
                    this._config.apiBase = process.env['STEAMSHIP_API_BASE'];
                  }
                  if (process.env['STEAMSHIP_APP_BASE']) {
                    this._config.appBase = process.env['STEAMSHIP_APP_BASE'];
                  }
                  if (process.env['STEAMSHIP_WEB_BASE']) {
                    this._config.webBase = process.env['STEAMSHIP_WEB_BASE'];
                  }
                  if (process.env['STEAMSHIP_API_KEY']) {
                    this._config.apiKey = process.env['STEAMSHIP_API_KEY'];
                  }
                  if (process.env['STEAMSHIP_WORKSPACE_ID']) {
                    this._config.workspaceId = process.env['STEAMSHIP_WORKSPACE_ID'];
                  }
                  if (process.env['STEAMSHIP_WORKSPACE_HANDLE']) {
                    this._config.workspaceHandle = process.env['STEAMSHIP_WORKSPACE_HANDLE'];
                  }
                } catch (_unused2) {
                  // pass
                }
              }
            case 1:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function loadEnvVars() {
        return _loadEnvVars.apply(this, arguments);
      }
      return loadEnvVars;
    }()
  }, {
    key: "applyManualOverrides",
    value: function applyManualOverrides(params) {
      if (params !== null && params !== void 0 && params.apiBase) {
        this._config.apiBase = params === null || params === void 0 ? void 0 : params.apiBase;
      }
      if (params !== null && params !== void 0 && params.appBase) {
        this._config.appBase = params === null || params === void 0 ? void 0 : params.appBase;
      }
      if (params !== null && params !== void 0 && params.webBase) {
        this._config.webBase = params === null || params === void 0 ? void 0 : params.webBase;
      }
      if (params !== null && params !== void 0 && params.apiKey) {
        this._config.apiKey = params === null || params === void 0 ? void 0 : params.apiKey;
      }
      if (params !== null && params !== void 0 && params.workspace) {
        this._config.workspaceHandle = params === null || params === void 0 ? void 0 : params.workspace;
      }
    }
  }, {
    key: "load",
    value: function () {
      var _load = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(params) {
        var found;
        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return this.prepare();
            case 2:
              this.clear();

              // First set the profile.
              if (typeof process != 'undefined' && typeof process.env != 'undefined') {
                if (process.env['STEAMSHIP_PROFILE']) {
                  this._config.profile = process.env['STEAMSHIP_PROFILE'];
                }
              }
              if (params !== null && params !== void 0 && params.profile) {
                this._config.profile = params === null || params === void 0 ? void 0 : params.profile;
              }

              // Then load from a file if provided
              if (!(params !== null && params !== void 0 && params.configFile)) {
                _context6.next = 13;
                break;
              }
              _context6.next = 8;
              return this.loadFromFile(params === null || params === void 0 ? void 0 : params.configFile, this._config.profile);
            case 8:
              found = _context6.sent;
              if (found) {
                _context6.next = 11;
                break;
              }
              throw "Configuration path provided but no configuration found at '".concat(params === null || params === void 0 ? void 0 : params.configFile, "'");
            case 11:
              _context6.next = 15;
              break;
            case 13:
              _context6.next = 15;
              return this.tryAutofindingFiles(this._config.profile);
            case 15:
              _context6.next = 17;
              return this.loadEnvVars();
            case 17:
              // Apply manual overrides
              this.applyManualOverrides(params);

              // Fix the base
              if (this._config.apiBase) {
                if (this._config.apiBase[this._config.apiBase.length - 1] != '/') {
                  this._config.apiBase = "".concat(this._config.apiBase, "/");
                }
              }
              if (this._config.appBase) {
                if (this._config.appBase[this._config.appBase.length - 1] != '/') {
                  this._config.appBase = "".concat(this._config.appBase, "/");
                }
              }
              if (this._config.webBase) {
                if (this._config.webBase[this._config.webBase.length - 1] != '/') {
                  this._config.webBase = "".concat(this._config.webBase, "/");
                }
              }
              return _context6.abrupt("return", this._config);
            case 22:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function load(_x6) {
        return _load.apply(this, arguments);
      }
      return load;
    }()
  }, {
    key: "modifyConfiguration",
    value: function () {
      var _modifyConfiguration = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(values, profile, configFile) {
        var os, path, str, newConfig;
        return _regenerator["default"].wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return this.prepare();
            case 2:
              if (!(!(0, _utils.isNode)() || typeof this._readFile == 'undefined' || typeof this._writeFile == 'undefined')) {
                _context7.next = 4;
                break;
              }
              throw 'Could not save configuration, no filesystem found.';
            case 4:
              _context7.next = 6;
              return Promise.resolve().then(function () {
                return _interopRequireWildcard(require('os'));
              });
            case 6:
              os = _context7.sent;
              _context7.next = 9;
              return Promise.resolve().then(function () {
                return _interopRequireWildcard(require('path'));
              });
            case 9:
              path = _context7.sent;
              if (!(typeof configFile === 'string' && configFile.trim() === '')) {
                _context7.next = 12;
                break;
              }
              throw 'An invalid save location was given.';
            case 12:
              if (!configFile) {
                configFile = path.join(os.homedir(), CONFIG_FILENAME);
              }
              str = this._readFile(configFile);
              newConfig = _objectSpread({}, DEFAULT_CONFIG);
              if (str) {
                try {
                  newConfig = JSON.parse(str);
                } catch (e) {
                  // If there is an issue with the config, we just use the default
                }
              }

              // Now set the desired values. If there is a profile, only do this to that
              // profile. Otherwise, override the fields.
              if (profile) {
                if (!newConfig.profiles) {
                  newConfig.profiles = {}; // Add the profiles field if it does not exist
                }

                if (!Object.keys(newConfig.profiles).includes(profile)) {
                  newConfig.profiles[profile] = {
                    profile: profile
                  }; // Adds this specific profile
                }

                Object.keys(values).forEach(function (key) {
                  if (key === 'profiles') {
                    throw 'Cannot save a profiles list within a profile itself. A `profiles` modification is only allowed on the default config (i.e. leave `profile` blank)';
                  }
                  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                  // @ts-ignore
                  newConfig.profiles[profile][key] = values[key];
                });
              } else {
                Object.keys(values).forEach(function (key) {
                  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                  // @ts-ignore
                  newConfig[key] = values[key];
                });
              }

              // Finally, save the configuration
              this._writeFile(configFile, JSON.stringify(newConfig, undefined, 2));
            case 18:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function modifyConfiguration(_x7, _x8, _x9) {
        return _modifyConfiguration.apply(this, arguments);
      }
      return modifyConfiguration;
    }()
  }]);
  return ConfigManager;
}();
function loadConfiguration(_x10) {
  return _loadConfiguration.apply(this, arguments);
}
/**
 * Modifies or creates a configuration given the desired values. Allows
 * modifying the default profile, or modifying individual profiles by
 * providing a `profile` parameter. If no configFile is given, defaults
 * to the default location (home directory / .steamship.json).
 * Note: If the configFile already exists, the existing file is modified.
 *       If the file is corrupt or missing, a new file is created
 * @param values The values to save to the config or profile
 * @param profile (Optional) The profile to override. Defaults to the default
 *                profile.
 * @param configFile (Optional) The absolute location to the file to save
 *                   to. Defaults to (home directory / .steamship.json)
 */
function _loadConfiguration() {
  _loadConfiguration = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(params) {
    var configManager;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          configManager = new ConfigManager();
          _context8.next = 3;
          return configManager.load(params);
        case 3:
          return _context8.abrupt("return", _context8.sent);
        case 4:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  }));
  return _loadConfiguration.apply(this, arguments);
}
function saveConfiguration(_x11, _x12, _x13) {
  return _saveConfiguration.apply(this, arguments);
}
function _saveConfiguration() {
  _saveConfiguration = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(values, profile, configFile) {
    var configManager;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          configManager = new ConfigManager();
          _context9.next = 3;
          return configManager.modifyConfiguration(values, profile, configFile);
        case 3:
        case "end":
          return _context9.stop();
      }
    }, _callee9);
  }));
  return _saveConfiguration.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,