"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PackageInstance = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _steamship_error = require("./steamship_error.js");
var _task = require("./task.js");
var _workspace = require("./workspace.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _EXPECT = function _EXPECT(client, data) {
  return new PackageInstance(client, data);
};
var _EXPECT_LIST = function _EXPECT_LIST(client, data) {
  if (!data) {
    return [];
  }
  return {
    packageInstances: data.packageInstances.map(function (x) {
      return _EXPECT(client, x);
    })
  };
};
var PackageInstance = /*#__PURE__*/function () {
  function PackageInstance(client, params) {
    (0, _classCallCheck2["default"])(this, PackageInstance);
    (0, _defineProperty2["default"])(this, "id", void 0);
    (0, _defineProperty2["default"])(this, "handle", void 0);
    (0, _defineProperty2["default"])(this, "packageId", void 0);
    (0, _defineProperty2["default"])(this, "packageHandle", void 0);
    (0, _defineProperty2["default"])(this, "packageVersionId", void 0);
    (0, _defineProperty2["default"])(this, "packageVersionHandle", void 0);
    (0, _defineProperty2["default"])(this, "workspaceId", void 0);
    (0, _defineProperty2["default"])(this, "workspaceHandle", void 0);
    (0, _defineProperty2["default"])(this, "userId", void 0);
    (0, _defineProperty2["default"])(this, "userHandle", void 0);
    (0, _defineProperty2["default"])(this, "description", void 0);
    (0, _defineProperty2["default"])(this, "createdAt", void 0);
    (0, _defineProperty2["default"])(this, "updatedAt", void 0);
    (0, _defineProperty2["default"])(this, "client", void 0);
    (0, _defineProperty2["default"])(this, "invocationURL", void 0);
    (0, _defineProperty2["default"])(this, "config", void 0);
    this.client = client;
    this.id = params.id;
    this.handle = params.handle;
    this.packageId = params.packageId;
    this.packageHandle = params.packageHandle;
    this.packageVersionId = params.packageVersionId;
    this.packageVersionHandle = params.packageVersionHandle;
    this.workspaceId = params.workspaceId;
    this.workspaceHandle = params.workspaceHandle;
    this.userId = params.userId;
    this.userHandle = params.userHandle;
    this.createdAt = params.createdAt;
    this.updatedAt = params.updatedAt;
    this.description = params.description;
    this.invocationURL = params.invocationURL;
    this.config = params.config;
  }
  (0, _createClass2["default"])(PackageInstance, [{
    key: "delete",
    value: function () {
      var _delete2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(config) {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.client.post('package/instance/delete', {
                id: this.id
              }, _objectSpread({
                expect: _EXPECT,
                responsePath: 'packageInstance'
              }, config));
            case 2:
              return _context.abrupt("return", _context.sent);
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function _delete(_x) {
        return _delete2.apply(this, arguments);
      }
      return _delete;
    }()
  }, {
    key: "loadMissingWorkspaceHandle",
    value: function () {
      var _loadMissingWorkspaceHandle = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
        var workspace;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (!(this.client && !this.workspaceHandle && this.workspaceId)) {
                _context2.next = 5;
                break;
              }
              _context2.next = 3;
              return _workspace.Workspace.get(this.client, {
                id: this.workspaceId
              });
            case 3:
              workspace = _context2.sent;
              if (workspace && workspace.output) {
                this.workspaceHandle = workspace.output.handle;
              }
            case 5:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function loadMissingWorkspaceHandle() {
        return _loadMissingWorkspaceHandle.apply(this, arguments);
      }
      return loadMissingWorkspaceHandle;
    }()
    /**
     * Invokes a method on a Package, to be run in the cloud.
     *
     * @param path - The method name (HTTP path) being invoked. E.g. `greet`
     * @param params - A dictionary of parameters to provide to the method
     * @param verb? - An optional HTTP verb, either GET or POST. Default: POST.
     * @param responseType? - An optional argument for Axios response encoding
     * @returns unknown - Depends upon method implementation
     */
  }, {
    key: "invoke",
    value: function () {
      var _invoke = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(path, params) {
        var verb,
          responseType,
          _args3 = arguments;
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              verb = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 'POST';
              responseType = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : undefined;
              _context3.next = 4;
              return this.loadMissingWorkspaceHandle();
            case 4:
              // Trim the leading / from path if there.
              if (path[0] == '/') {
                path = path.slice(1);
              }
              return _context3.abrupt("return", this.client.call(verb, "/".concat(this.workspaceHandle, "/").concat(this.handle, "/").concat(path), _objectSpread({}, params), {
                isPackageCall: true,
                packageOwner: this.userHandle,
                packageId: this.packageId,
                packageInstanceId: this.id,
                rawResponse: true,
                workspaceId: this.workspaceId,
                responseType: responseType
              }));
            case 6:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function invoke(_x2, _x3) {
        return _invoke.apply(this, arguments);
      }
      return invoke;
    }()
    /**
     * Schedules the invocation of a method on a Package, to be run in the cloud.
     *
     * @param path - The method name (HTTP path) being invoked. E.g. `greet`
     * @param params - A dictionary of parameters to provide to the method
     * @param verb? - An optional HTTP verb, either GET or POST. Default: POST.
     * @param responseType? - An optional argument for Axios response encoding
     * @returns Task - A task representing the eventual response of the method
     */
  }, {
    key: "invokeAsync",
    value: function () {
      var _invokeAsync = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(path, params) {
        var _result$data;
        var verb,
          payload,
          operation,
          result,
          _result$data2,
          _args4 = arguments;
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              verb = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 'POST';
              _context4.next = 3;
              return this.loadMissingWorkspaceHandle();
            case 3:
              // Trim the leading / from path if there.
              if (path[0] == '/') {
                path = path.slice(1);
              }

              // This is the payload describing the invocation.
              payload = {
                instanceHandle: this.handle,
                payload: {
                  httpVerb: verb,
                  invocationPath: path,
                  arguments: params || {}
                }
              };
              operation = 'package/instance/invoke';
              _context4.next = 8;
              return this.client.post(operation, payload, {
                asBackgroundTask: true
              });
            case 8:
              result = _context4.sent;
              if (!(result !== null && result !== void 0 && (_result$data = result.data) !== null && _result$data !== void 0 && _result$data.status)) {
                _context4.next = 13;
                break;
              }
              return _context4.abrupt("return", new _task.Task(this.client, (_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : _result$data2.status));
            case 13:
              if (!(result instanceof _task.Task)) {
                _context4.next = 15;
                break;
              }
              return _context4.abrupt("return", result);
            case 15:
              throw new _steamship_error.SteamshipError({
                statusMessage: 'The result from async invocation was lacking the expected .data.status field.'
              });
            case 16:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function invokeAsync(_x4, _x5) {
        return _invokeAsync.apply(this, arguments);
      }
      return invokeAsync;
    }()
    /**
     * Returns the HTTP invocation URL for a method a Package, to be run in the cloud.
     *
     * @param path - The method name (HTTP path) being invoked. E.g. `greet`
     * @returns string
     */
  }, {
    key: "invocationUrl",
    value: function () {
      var _invocationUrl = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(path) {
        var baseConfig, postConfig;
        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return this.loadMissingWorkspaceHandle();
            case 2:
              _context5.next = 4;
              return this.client.config;
            case 4:
              baseConfig = _context5.sent;
              postConfig = {
                isPackageCall: true,
                packageOwner: this.userHandle,
                packageId: this.packageId,
                packageInstanceId: this.id,
                rawResponse: true,
                workspaceId: this.workspaceId
              };
              return _context5.abrupt("return", this.client._url(baseConfig, postConfig, path));
            case 7:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function invocationUrl(_x6) {
        return _invocationUrl.apply(this, arguments);
      }
      return invocationUrl;
    }()
  }], [{
    key: "create",
    value: function () {
      var _create = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(client, params, config) {
        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return client.post('package/instance/create', _objectSpread({}, params), _objectSpread(_objectSpread({}, config), {}, {
                expect: _EXPECT,
                responsePath: 'packageInstance'
              }));
            case 2:
              return _context6.abrupt("return", _context6.sent);
            case 3:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }));
      function create(_x7, _x8, _x9) {
        return _create.apply(this, arguments);
      }
      return create;
    }()
  }, {
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(client, params, config) {
        return _regenerator["default"].wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return client.post('package/instance/get', _objectSpread({}, params), _objectSpread({
                expect: _EXPECT,
                responsePath: 'packageInstance'
              }, config));
            case 2:
              return _context7.abrupt("return", _context7.sent);
            case 3:
            case "end":
              return _context7.stop();
          }
        }, _callee7);
      }));
      function get(_x10, _x11, _x12) {
        return _get.apply(this, arguments);
      }
      return get;
    }()
  }, {
    key: "list",
    value: function () {
      var _list = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(client, params, config) {
        return _regenerator["default"].wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return client.post('package/instance/list', _objectSpread({}, params), _objectSpread({
                expect: _EXPECT_LIST
              }, config));
            case 2:
              return _context8.abrupt("return", _context8.sent);
            case 3:
            case "end":
              return _context8.stop();
          }
        }, _callee8);
      }));
      function list(_x13, _x14, _x15) {
        return _list.apply(this, arguments);
      }
      return list;
    }()
  }]);
  return PackageInstance;
}();
exports.PackageInstance = PackageInstance;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,