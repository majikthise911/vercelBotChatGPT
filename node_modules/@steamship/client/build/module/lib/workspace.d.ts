import { IApiBase } from './shared/BaseInterfaces.js';
import { Configuration } from './shared/Configuration.js';
import { CreateParams, GetParams } from './shared/Requests.js';
import { Task } from './task.js';
export interface WorkspaceParams {
    id?: string;
    handle?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
}
export interface WorkspaceList {
    workspaces: Workspace[];
}
export declare class Workspace {
    client: IApiBase;
    id?: string;
    handle?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    constructor(client: IApiBase, params: WorkspaceParams);
    static create(client: IApiBase, params?: CreateParams, config?: Configuration): Promise<Task<Workspace>>;
    static get(client: IApiBase, params?: GetParams, config?: Configuration): Promise<Task<Workspace>>;
    static list(client: IApiBase, params?: GetParams, config?: Configuration): Promise<Task<WorkspaceList>>;
    delete(config?: Configuration): Promise<Task<Workspace>>;
}
