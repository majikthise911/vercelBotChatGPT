function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import { TaskState } from './types/base.js';
var _EXPECT_TASK = function _EXPECT_TASK(client, data) {
  return new Task(client, data);
};
var _EXPECT_LIST = function _EXPECT_LIST(client, data) {
  if (!data) {
    return {
      tasks: []
    };
  }
  return {
    tasks: data.tasks.map(function (x) {
      return _EXPECT_TASK(client, x);
    })
  };
};
export var Task = /*#__PURE__*/function () {
  function Task(client, params) {
    _classCallCheck(this, Task);
    _defineProperty(this, "client", void 0);
    _defineProperty(this, "taskId", void 0);
    _defineProperty(this, "userId", void 0);
    _defineProperty(this, "workspaceId", void 0);
    _defineProperty(this, "version", void 0);
    _defineProperty(this, "name", void 0);
    _defineProperty(this, "input", void 0);
    _defineProperty(this, "output", void 0);
    _defineProperty(this, "maxRetries", void 0);
    _defineProperty(this, "retries", void 0);
    _defineProperty(this, "state", void 0);
    _defineProperty(this, "statusMessage", void 0);
    _defineProperty(this, "statusCode", void 0);
    _defineProperty(this, "statusSuggestion", void 0);
    _defineProperty(this, "taskCreatedOn", void 0);
    _defineProperty(this, "taskLastModifiedOn", void 0);
    _defineProperty(this, "taskExecutor", void 0);
    _defineProperty(this, "taskType", void 0);
    _defineProperty(this, "assignedWorker", void 0);
    _defineProperty(this, "startedAt", void 0);
    _defineProperty(this, "responsePath", void 0);
    _defineProperty(this, "rawResponse", void 0);
    _defineProperty(this, "objectConstructor", void 0);
    this.client = client;
    this.update(params);

    // Only set these the first time.
    this.responsePath = params == null ? void 0 : params.responsePath;
    this.rawResponse = params == null ? void 0 : params.rawResponse;
    this.objectConstructor = params == null ? void 0 : params.objectConstructor;
  }
  _createClass(Task, [{
    key: "update",
    value: function update(params) {
      if (params) {
        this.taskId = params == null ? void 0 : params.taskId;
        this.userId = params == null ? void 0 : params.userId;
        this.workspaceId = params == null ? void 0 : params.workspaceId;
        this.version = params == null ? void 0 : params.version;
        this.name = params == null ? void 0 : params.name;
        this.input = params == null ? void 0 : params.input;
        this.maxRetries = params == null ? void 0 : params.maxRetries;
        this.maxRetries = params == null ? void 0 : params.maxRetries;
        this.retries = params == null ? void 0 : params.retries;
        this.state = params == null ? void 0 : params.state;
        this.statusMessage = params == null ? void 0 : params.statusMessage;
        this.statusCode = params == null ? void 0 : params.statusCode;
        this.statusSuggestion = params == null ? void 0 : params.statusSuggestion;
        this.taskCreatedOn = params == null ? void 0 : params.taskCreatedOn;
        this.taskLastModifiedOn = params == null ? void 0 : params.taskLastModifiedOn;
        this.taskExecutor = params == null ? void 0 : params.taskExecutor;
        this.taskType = params == null ? void 0 : params.taskType;
        this.assignedWorker = params == null ? void 0 : params.assignedWorker;
        this.startedAt = params == null ? void 0 : params.startedAt;
        this.setData(params == null ? void 0 : params.output);
      }
      return this;
    }
  }, {
    key: "setData",
    value: function setData(data) {
      if (typeof data != 'undefined') {
        if (data && this.responsePath) {
          if (data[this.responsePath]) {
            data = data[this.responsePath];
          }
        }
        if (data && this.objectConstructor) {
          this.output = this.objectConstructor(this.client, data);
        } else {
          this.output = data;
        }
      }
    }
  }, {
    key: "completed",
    value: function completed() {
      return this.state == TaskState.succeeded || this.state == TaskState.failed;
    }
  }, {
    key: "failed",
    value: function failed() {
      return this.state == TaskState.failed;
    }
  }, {
    key: "wait",
    value: function () {
      var _wait = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {
        var _params, maxTimeoutSeconds, retryDelaySeconds, start;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              // Bailout and defaults
              if (typeof params == 'undefined') {
                params = {};
              }
              _params = params, maxTimeoutSeconds = _params.maxTimeoutSeconds, retryDelaySeconds = _params.retryDelaySeconds;
              if (typeof maxTimeoutSeconds == 'undefined') {
                maxTimeoutSeconds = 60;
              }
              if (typeof retryDelaySeconds == 'undefined') {
                retryDelaySeconds = 1;
              }

              // If we've already finished, no need to poll
              if (!(this.completed() === true)) {
                _context.next = 6;
                break;
              }
              return _context.abrupt("return", this);
            case 6:
              // Start the wait loop.
              start = Date.now(); // ms since epoch
              _context.next = 9;
              return this.check();
            case 9:
              if (!(this.completed() === true)) {
                _context.next = 11;
                break;
              }
              return _context.abrupt("return", this);
            case 11:
              if (!((Date.now() - start) / 1000.0 < maxTimeoutSeconds)) {
                _context.next = 20;
                break;
              }
              _context.next = 14;
              return new Promise(function (r) {
                return setTimeout(r, 1000 * retryDelaySeconds);
              });
            case 14:
              _context.next = 16;
              return this.check();
            case 16:
              if (!(this.completed() === true)) {
                _context.next = 18;
                break;
              }
              return _context.abrupt("return", this);
            case 18:
              _context.next = 11;
              break;
            case 20:
              return _context.abrupt("return", this);
            case 21:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function wait(_x) {
        return _wait.apply(this, arguments);
      }
      return wait;
    }()
  }, {
    key: "check",
    value: function () {
      var _check = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var result;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return this.client.post('task/status', {
                taskId: this.taskId
              });
            case 2:
              result = _context2.sent;
              if (result) {
                this.update(result);
              }
              return _context2.abrupt("return", this);
            case 5:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function check() {
        return _check.apply(this, arguments);
      }
      return check;
    }()
  }, {
    key: "addComment",
    value: function () {
      var _addComment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if (typeof params.metadata == 'object') {
                params.metadata = JSON.stringify(params.metadata);
              }
              _context3.next = 3;
              return this.client.post('task/comment/create', _extends({
                taskId: this.taskId
              }, params));
            case 3:
              return _context3.abrupt("return", _context3.sent);
            case 4:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function addComment(_x2) {
        return _addComment.apply(this, arguments);
      }
      return addComment;
    }()
  }, {
    key: "listComments",
    value: function () {
      var _listComments = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return this.client.post('task/comment/list', {
                taskId: this.taskId
              });
            case 2:
              return _context4.abrupt("return", _context4.sent);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function listComments() {
        return _listComments.apply(this, arguments);
      }
      return listComments;
    }()
  }, {
    key: "deleteComment",
    value: function () {
      var _deleteComment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(params) {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return this.client.post('task/comment/delete', params);
            case 2:
              return _context5.abrupt("return", _context5.sent);
            case 3:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function deleteComment(_x3) {
        return _deleteComment.apply(this, arguments);
      }
      return deleteComment;
    }()
  }], [{
    key: "list",
    value: function () {
      var _list = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(client, params, config) {
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return client.post('/task/list', _extends({}, params), _extends({
                expect: _EXPECT_LIST
              }, config));
            case 2:
              return _context6.abrupt("return", _context6.sent);
            case 3:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }));
      function list(_x4, _x5, _x6) {
        return _list.apply(this, arguments);
      }
      return list;
    }()
  }]);
  return Task;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUYXNrU3RhdGUiLCJfRVhQRUNUX1RBU0siLCJjbGllbnQiLCJkYXRhIiwiVGFzayIsIl9FWFBFQ1RfTElTVCIsInRhc2tzIiwibWFwIiwieCIsInBhcmFtcyIsInVwZGF0ZSIsInJlc3BvbnNlUGF0aCIsInJhd1Jlc3BvbnNlIiwib2JqZWN0Q29uc3RydWN0b3IiLCJ0YXNrSWQiLCJ1c2VySWQiLCJ3b3Jrc3BhY2VJZCIsInZlcnNpb24iLCJuYW1lIiwiaW5wdXQiLCJtYXhSZXRyaWVzIiwicmV0cmllcyIsInN0YXRlIiwic3RhdHVzTWVzc2FnZSIsInN0YXR1c0NvZGUiLCJzdGF0dXNTdWdnZXN0aW9uIiwidGFza0NyZWF0ZWRPbiIsInRhc2tMYXN0TW9kaWZpZWRPbiIsInRhc2tFeGVjdXRvciIsInRhc2tUeXBlIiwiYXNzaWduZWRXb3JrZXIiLCJzdGFydGVkQXQiLCJzZXREYXRhIiwib3V0cHV0Iiwic3VjY2VlZGVkIiwiZmFpbGVkIiwibWF4VGltZW91dFNlY29uZHMiLCJyZXRyeURlbGF5U2Vjb25kcyIsImNvbXBsZXRlZCIsInN0YXJ0IiwiRGF0ZSIsIm5vdyIsImNoZWNrIiwiUHJvbWlzZSIsInIiLCJzZXRUaW1lb3V0IiwicG9zdCIsInJlc3VsdCIsIm1ldGFkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsImNvbmZpZyIsImV4cGVjdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdGFzay50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBJQXBpQmFzZSxcbiAgSVRhc2ssXG4gIFRhc2tMaXN0LFxuICBUYXNrTGlzdFBhcmFtcyxcbn0gZnJvbSAnLi9zaGFyZWQvQmFzZUludGVyZmFjZXMuanMnO1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvbiB9IGZyb20gJy4vc2hhcmVkL0NvbmZpZ3VyYXRpb24uanMnO1xuaW1wb3J0IHsgVGFza1BhcmFtcywgVGFza1N0YXRlIH0gZnJvbSAnLi90eXBlcy9iYXNlLmpzJztcbmltcG9ydCB7XG4gIEFkZFRhc2tDb21tZW50UmVxdWVzdCxcbiAgRGVsZXRlVGFza0NvbW1lbnRSZXF1ZXN0LFxuICBMaXN0VGFza0NvbW1lbnRSZXNwb25zZSxcbiAgVGFza0NvbW1lbnRSZXNwb25zZSxcbn0gZnJvbSAnLi90eXBlcy90YXNrX2NvbW1lbnQuanMnO1xuXG5jb25zdCBfRVhQRUNUX1RBU0sgPSAoY2xpZW50OiBJQXBpQmFzZSwgZGF0YTogdW5rbm93bik6IElUYXNrPHVua25vd24+ID0+IHtcbiAgcmV0dXJuIG5ldyBUYXNrKGNsaWVudCwgZGF0YSBhcyBUYXNrUGFyYW1zPHVua25vd24+KTtcbn07XG5cbmNvbnN0IF9FWFBFQ1RfTElTVCA9IChjbGllbnQ6IElBcGlCYXNlLCBkYXRhOiB1bmtub3duKTogVGFza0xpc3QgPT4ge1xuICBpZiAoIWRhdGEpIHtcbiAgICByZXR1cm4geyB0YXNrczogW10gfTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHRhc2tzOiAoKGRhdGEgYXMgYW55KS50YXNrcyBhcyBBcnJheTxhbnk+KS5tYXAoKHgpID0+XG4gICAgICBfRVhQRUNUX1RBU0soY2xpZW50LCB4KVxuICAgICksXG4gIH07XG59O1xuXG5leHBvcnQgY2xhc3MgVGFzazxUPiBpbXBsZW1lbnRzIFRhc2tQYXJhbXM8VD4sIElUYXNrPFQ+IHtcbiAgY2xpZW50OiBJQXBpQmFzZTtcbiAgdGFza0lkPzogc3RyaW5nO1xuICB1c2VySWQ/OiBzdHJpbmc7XG4gIHdvcmtzcGFjZUlkPzogc3RyaW5nO1xuICB2ZXJzaW9uPzogc3RyaW5nO1xuICBuYW1lPzogc3RyaW5nO1xuICBpbnB1dD86IHN0cmluZztcbiAgb3V0cHV0PzogVDtcbiAgbWF4UmV0cmllcz86IG51bWJlcjtcbiAgcmV0cmllcz86IG51bWJlcjtcbiAgc3RhdGU/OiBUYXNrU3RhdGU7XG4gIHN0YXR1c01lc3NhZ2U/OiBzdHJpbmc7XG4gIHN0YXR1c0NvZGU/OiBzdHJpbmc7XG4gIHN0YXR1c1N1Z2dlc3Rpb24/OiBzdHJpbmc7XG4gIHRhc2tDcmVhdGVkT24/OiBzdHJpbmc7XG4gIHRhc2tMYXN0TW9kaWZpZWRPbj86IHN0cmluZztcbiAgdGFza0V4ZWN1dG9yPzogc3RyaW5nO1xuICB0YXNrVHlwZT86IHN0cmluZztcbiAgYXNzaWduZWRXb3JrZXI/OiBzdHJpbmc7XG4gIHN0YXJ0ZWRBdD86IHN0cmluZztcbiAgcmVzcG9uc2VQYXRoPzogc3RyaW5nO1xuICByYXdSZXNwb25zZT86IGJvb2xlYW47XG4gIG9iamVjdENvbnN0cnVjdG9yPzogKGNsaWVudDogSUFwaUJhc2UsIGRhdGE6IHVua25vd24pID0+IFQ7XG5cbiAgY29uc3RydWN0b3IoY2xpZW50OiBJQXBpQmFzZSwgcGFyYW1zPzogVGFza1BhcmFtczxUPikge1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgIHRoaXMudXBkYXRlKHBhcmFtcyk7XG5cbiAgICAvLyBPbmx5IHNldCB0aGVzZSB0aGUgZmlyc3QgdGltZS5cbiAgICB0aGlzLnJlc3BvbnNlUGF0aCA9IHBhcmFtcz8ucmVzcG9uc2VQYXRoO1xuICAgIHRoaXMucmF3UmVzcG9uc2UgPSBwYXJhbXM/LnJhd1Jlc3BvbnNlO1xuICAgIHRoaXMub2JqZWN0Q29uc3RydWN0b3IgPSBwYXJhbXM/Lm9iamVjdENvbnN0cnVjdG9yO1xuICB9XG5cbiAgc3RhdGljIGFzeW5jIGxpc3QoXG4gICAgY2xpZW50OiBJQXBpQmFzZSxcbiAgICBwYXJhbXM/OiBUYXNrTGlzdFBhcmFtcyxcbiAgICBjb25maWc/OiBDb25maWd1cmF0aW9uXG4gICk6IFByb21pc2U8VGFzazxUYXNrTGlzdD4+IHtcbiAgICByZXR1cm4gKGF3YWl0IGNsaWVudC5wb3N0KFxuICAgICAgJy90YXNrL2xpc3QnLFxuICAgICAgeyAuLi5wYXJhbXMgfSxcbiAgICAgIHtcbiAgICAgICAgZXhwZWN0OiBfRVhQRUNUX0xJU1QsXG4gICAgICAgIC4uLmNvbmZpZyxcbiAgICAgIH1cbiAgICApKSBhcyBUYXNrPFRhc2tMaXN0PjtcbiAgfVxuXG4gIHVwZGF0ZShwYXJhbXM/OiBUYXNrUGFyYW1zPFQ+KTogSVRhc2s8VD4ge1xuICAgIGlmIChwYXJhbXMpIHtcbiAgICAgIHRoaXMudGFza0lkID0gcGFyYW1zPy50YXNrSWQ7XG4gICAgICB0aGlzLnVzZXJJZCA9IHBhcmFtcz8udXNlcklkO1xuICAgICAgdGhpcy53b3Jrc3BhY2VJZCA9IHBhcmFtcz8ud29ya3NwYWNlSWQ7XG4gICAgICB0aGlzLnZlcnNpb24gPSBwYXJhbXM/LnZlcnNpb247XG4gICAgICB0aGlzLm5hbWUgPSBwYXJhbXM/Lm5hbWU7XG4gICAgICB0aGlzLmlucHV0ID0gcGFyYW1zPy5pbnB1dDtcbiAgICAgIHRoaXMubWF4UmV0cmllcyA9IHBhcmFtcz8ubWF4UmV0cmllcztcbiAgICAgIHRoaXMubWF4UmV0cmllcyA9IHBhcmFtcz8ubWF4UmV0cmllcztcbiAgICAgIHRoaXMucmV0cmllcyA9IHBhcmFtcz8ucmV0cmllcztcbiAgICAgIHRoaXMuc3RhdGUgPSBwYXJhbXM/LnN0YXRlO1xuICAgICAgdGhpcy5zdGF0dXNNZXNzYWdlID0gcGFyYW1zPy5zdGF0dXNNZXNzYWdlO1xuICAgICAgdGhpcy5zdGF0dXNDb2RlID0gcGFyYW1zPy5zdGF0dXNDb2RlO1xuICAgICAgdGhpcy5zdGF0dXNTdWdnZXN0aW9uID0gcGFyYW1zPy5zdGF0dXNTdWdnZXN0aW9uO1xuICAgICAgdGhpcy50YXNrQ3JlYXRlZE9uID0gcGFyYW1zPy50YXNrQ3JlYXRlZE9uO1xuICAgICAgdGhpcy50YXNrTGFzdE1vZGlmaWVkT24gPSBwYXJhbXM/LnRhc2tMYXN0TW9kaWZpZWRPbjtcbiAgICAgIHRoaXMudGFza0V4ZWN1dG9yID0gcGFyYW1zPy50YXNrRXhlY3V0b3I7XG4gICAgICB0aGlzLnRhc2tUeXBlID0gcGFyYW1zPy50YXNrVHlwZTtcbiAgICAgIHRoaXMuYXNzaWduZWRXb3JrZXIgPSBwYXJhbXM/LmFzc2lnbmVkV29ya2VyO1xuICAgICAgdGhpcy5zdGFydGVkQXQgPSBwYXJhbXM/LnN0YXJ0ZWRBdDtcbiAgICAgIHRoaXMuc2V0RGF0YShwYXJhbXM/Lm91dHB1dCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBzZXREYXRhKGRhdGE/OiBhbnkpIHtcbiAgICBpZiAodHlwZW9mIGRhdGEgIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGlmIChkYXRhICYmIHRoaXMucmVzcG9uc2VQYXRoKSB7XG4gICAgICAgIGlmICgoZGF0YSBhcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPilbdGhpcy5yZXNwb25zZVBhdGhdKSB7XG4gICAgICAgICAgZGF0YSA9IChkYXRhIGFzIFJlY29yZDxzdHJpbmcsIHVua25vd24+KVt0aGlzLnJlc3BvbnNlUGF0aF07XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGRhdGEgJiYgdGhpcy5vYmplY3RDb25zdHJ1Y3Rvcikge1xuICAgICAgICB0aGlzLm91dHB1dCA9IHRoaXMub2JqZWN0Q29uc3RydWN0b3IodGhpcy5jbGllbnQsIGRhdGEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vdXRwdXQgPSBkYXRhIGFzIFQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29tcGxldGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnN0YXRlID09IFRhc2tTdGF0ZS5zdWNjZWVkZWQgfHwgdGhpcy5zdGF0ZSA9PSBUYXNrU3RhdGUuZmFpbGVkO1xuICB9XG5cbiAgZmFpbGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnN0YXRlID09IFRhc2tTdGF0ZS5mYWlsZWQ7XG4gIH1cblxuICBhc3luYyB3YWl0KHBhcmFtcz86IHtcbiAgICBtYXhUaW1lb3V0U2Vjb25kcz86IG51bWJlcjtcbiAgICByZXRyeURlbGF5U2Vjb25kcz86IG51bWJlcjtcbiAgfSk6IFByb21pc2U8VGFzazxUPj4ge1xuICAgIC8vIEJhaWxvdXQgYW5kIGRlZmF1bHRzXG4gICAgaWYgKHR5cGVvZiBwYXJhbXMgPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHBhcmFtcyA9IHt9O1xuICAgIH1cbiAgICBsZXQgeyBtYXhUaW1lb3V0U2Vjb25kcywgcmV0cnlEZWxheVNlY29uZHMgfSA9IHBhcmFtcztcbiAgICBpZiAodHlwZW9mIG1heFRpbWVvdXRTZWNvbmRzID09ICd1bmRlZmluZWQnKSB7XG4gICAgICBtYXhUaW1lb3V0U2Vjb25kcyA9IDYwO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJldHJ5RGVsYXlTZWNvbmRzID09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXRyeURlbGF5U2Vjb25kcyA9IDE7XG4gICAgfVxuXG4gICAgLy8gSWYgd2UndmUgYWxyZWFkeSBmaW5pc2hlZCwgbm8gbmVlZCB0byBwb2xsXG4gICAgaWYgKHRoaXMuY29tcGxldGVkKCkgPT09IHRydWUpIHtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8vIFN0YXJ0IHRoZSB3YWl0IGxvb3AuXG4gICAgY29uc3Qgc3RhcnQgPSBEYXRlLm5vdygpOyAvLyBtcyBzaW5jZSBlcG9jaFxuICAgIGF3YWl0IHRoaXMuY2hlY2soKTtcbiAgICBpZiAodGhpcy5jb21wbGV0ZWQoKSA9PT0gdHJ1ZSkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgd2hpbGUgKChEYXRlLm5vdygpIC0gc3RhcnQpIC8gMTAwMC4wIDwgbWF4VGltZW91dFNlY29uZHMpIHtcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKChyKSA9PlxuICAgICAgICBzZXRUaW1lb3V0KHIsIDEwMDAgKiAocmV0cnlEZWxheVNlY29uZHMgYXMgbnVtYmVyKSlcbiAgICAgICk7XG4gICAgICBhd2FpdCB0aGlzLmNoZWNrKCk7XG4gICAgICBpZiAodGhpcy5jb21wbGV0ZWQoKSA9PT0gdHJ1ZSkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gSWYgd2UncmUgaGVyZSwgd2UgdGltZWQgb3V0LlxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgYXN5bmMgY2hlY2soKTogUHJvbWlzZTxUYXNrPFQ+IHwgdW5kZWZpbmVkPiB7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgKHRoaXMuY2xpZW50LnBvc3QoJ3Rhc2svc3RhdHVzJywge1xuICAgICAgdGFza0lkOiB0aGlzLnRhc2tJZCxcbiAgICB9KSBhcyBQcm9taXNlPFRhc2s8VD4+KTtcbiAgICBpZiAocmVzdWx0KSB7XG4gICAgICB0aGlzLnVwZGF0ZShyZXN1bHQpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGFzeW5jIGFkZENvbW1lbnQoXG4gICAgcGFyYW1zOiBBZGRUYXNrQ29tbWVudFJlcXVlc3RcbiAgKTogUHJvbWlzZTxUYXNrPFRhc2tDb21tZW50UmVzcG9uc2U+PiB7XG4gICAgaWYgKHR5cGVvZiBwYXJhbXMubWV0YWRhdGEgPT0gJ29iamVjdCcpIHtcbiAgICAgIHBhcmFtcy5tZXRhZGF0YSA9IEpTT04uc3RyaW5naWZ5KHBhcmFtcy5tZXRhZGF0YSk7XG4gICAgfVxuICAgIHJldHVybiAoYXdhaXQgdGhpcy5jbGllbnQucG9zdCgndGFzay9jb21tZW50L2NyZWF0ZScsIHtcbiAgICAgIHRhc2tJZDogdGhpcy50YXNrSWQsXG4gICAgICAuLi5wYXJhbXMsXG4gICAgfSkpIGFzIFRhc2s8VGFza0NvbW1lbnRSZXNwb25zZT47XG4gIH1cblxuICBhc3luYyBsaXN0Q29tbWVudHMoKTogUHJvbWlzZTxUYXNrPExpc3RUYXNrQ29tbWVudFJlc3BvbnNlPj4ge1xuICAgIHJldHVybiAoYXdhaXQgdGhpcy5jbGllbnQucG9zdCgndGFzay9jb21tZW50L2xpc3QnLCB7XG4gICAgICB0YXNrSWQ6IHRoaXMudGFza0lkLFxuICAgIH0pKSBhcyBUYXNrPExpc3RUYXNrQ29tbWVudFJlc3BvbnNlPjtcbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZUNvbW1lbnQoXG4gICAgcGFyYW1zOiBEZWxldGVUYXNrQ29tbWVudFJlcXVlc3RcbiAgKTogUHJvbWlzZTxUYXNrPFRhc2tDb21tZW50UmVzcG9uc2U+PiB7XG4gICAgcmV0dXJuIChhd2FpdCB0aGlzLmNsaWVudC5wb3N0KFxuICAgICAgJ3Rhc2svY29tbWVudC9kZWxldGUnLFxuICAgICAgcGFyYW1zXG4gICAgKSkgYXMgVGFzazxUYXNrQ29tbWVudFJlc3BvbnNlPjtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOytDQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU1BLFNBQXFCQSxTQUFTLFFBQVEsaUJBQWlCO0FBUXZELElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFZLENBQUlDLE1BQWdCLEVBQUVDLElBQWEsRUFBcUI7RUFDeEUsT0FBTyxJQUFJQyxJQUFJLENBQUNGLE1BQU0sRUFBRUMsSUFBSSxDQUF3QjtBQUN0RCxDQUFDO0FBRUQsSUFBTUUsWUFBWSxHQUFHLFNBQWZBLFlBQVksQ0FBSUgsTUFBZ0IsRUFBRUMsSUFBYSxFQUFlO0VBQ2xFLElBQUksQ0FBQ0EsSUFBSSxFQUFFO0lBQ1QsT0FBTztNQUFFRyxLQUFLLEVBQUU7SUFBRyxDQUFDO0VBQ3RCO0VBQ0EsT0FBTztJQUNMQSxLQUFLLEVBQUlILElBQUksQ0FBU0csS0FBSyxDQUFnQkMsR0FBRyxDQUFDLFVBQUNDLENBQUM7TUFBQSxPQUMvQ1AsWUFBWSxDQUFDQyxNQUFNLEVBQUVNLENBQUMsQ0FBQztJQUFBO0VBRTNCLENBQUM7QUFDSCxDQUFDO0FBRUQsV0FBYUosSUFBSTtFQXlCZixjQUFZRixNQUFnQixFQUFFTyxNQUFzQixFQUFFO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQ3BELElBQUksQ0FBQ1AsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ1EsTUFBTSxDQUFDRCxNQUFNLENBQUM7O0lBRW5CO0lBQ0EsSUFBSSxDQUFDRSxZQUFZLEdBQUdGLE1BQU0sb0JB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