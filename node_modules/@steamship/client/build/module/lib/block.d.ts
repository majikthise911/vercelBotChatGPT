import { IApiBase } from './shared/BaseInterfaces.js';
import { Configuration } from './shared/Configuration.js';
import { Tag, TagParams } from './tag.js';
import { Task } from './task.js';
export interface BlockParams {
    id?: string;
    workspaceId?: string;
    fileId?: string;
    text?: string;
    tags?: Tag[] | TagParams[];
    createdAt?: string;
    updatedAt?: string;
}
export interface BlockList {
    blocks: Block[];
}
export interface UploadParams {
    fileId?: string;
    text?: string;
    tags?: TagParams[];
}
export declare class Block {
    id?: string;
    fileId?: string;
    text?: string;
    tags?: Tag[];
    createdAt?: string;
    updatedAt?: string;
    client: IApiBase;
    constructor(client: IApiBase, params: BlockParams);
    static create(client: IApiBase, params: UploadParams, config?: Configuration): Promise<Task<Block>>;
    delete(config?: Configuration): Promise<Task<Block>>;
}
