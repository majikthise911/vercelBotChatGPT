export interface Configuration {
    apiKey?: string;
    apiBase?: string;
    appBase?: string;
    webBase?: string;
    workspaceId?: string;
    workspaceHandle?: string;
    profile?: string;
    profiles?: {
        [name: string]: Configuration;
    };
}
export interface LoadConfigParams {
    apiKey?: string;
    apiBase?: string;
    appBase?: string;
    webBase?: string;
    workspace?: string;
    profile?: string;
    configFile?: string;
    failIfWorkspaceExists?: boolean;
}
export interface SaveConfigParams {
    apiKey?: string;
    apiBase?: string;
    appBase?: string;
    webBase?: string;
    workspaceId?: string;
    workspaceHandle?: string;
    profile?: string;
    profiles?: {
        [name: string]: Configuration;
    };
}
export declare const DEFAULT_CONFIG: {
    apiBase: string;
    appBase: string;
    webBase: string;
};
export declare const CONFIG_FILENAME = ".steamship.json";
export declare function loadConfiguration(params?: LoadConfigParams): Promise<Configuration>;
/**
 * Modifies or creates a configuration given the desired values. Allows
 * modifying the default profile, or modifying individual profiles by
 * providing a `profile` parameter. If no configFile is given, defaults
 * to the default location (home directory / .steamship.json).
 * Note: If the configFile already exists, the existing file is modified.
 *       If the file is corrupt or missing, a new file is created
 * @param values The values to save to the config or profile
 * @param profile (Optional) The profile to override. Defaults to the default
 *                profile.
 * @param configFile (Optional) The absolute location to the file to save
 *                   to. Defaults to (home directory / .steamship.json)
 */
export declare function saveConfiguration(values: SaveConfigParams, profile?: string, configFile?: string): Promise<void>;
