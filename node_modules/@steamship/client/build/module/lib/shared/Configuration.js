function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import { isNode } from '../utils.js';

/*
 * The goal of this file is to provide a credential-loading system
 * that is safe in BOTH the command line and the browser.
 */

export var DEFAULT_CONFIG = {
  apiBase: 'https://api.steamship.com/api/v1/',
  appBase: 'https://steamship.run/',
  webBase: 'https://app.steamship.com/'
};

// const defaultStagingCredentials = {
//   apiBase: "https://api.staging.steamship.com/api/v1",
//   appBase: "https://staging.steamship.com/api/v1"
// }

export var CONFIG_FILENAME = '.steamship.json';
var ConfigManager = /*#__PURE__*/function () {
  function ConfigManager() {
    _classCallCheck(this, ConfigManager);
    _defineProperty(this, "_readFile", undefined);
    _defineProperty(this, "_writeFile", undefined);
    _defineProperty(this, "_configSearchPath", []);
    _defineProperty(this, "_config", {});
  }
  _createClass(ConfigManager, [{
    key: "prepare",
    value: function () {
      var _prepare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var fs, os, path;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return import('fs');
            case 3:
              fs = _context.sent;
              this._readFile = function (filePath) {
                if (!fs.existsSync(filePath)) {
                  return undefined;
                }
                return fs.readFileSync(filePath, 'utf8');
              };
              this._writeFile = function (filePath, data) {
                fs.writeFileSync(filePath, data);
              };
              _context.next = 11;
              break;
            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](0);
              // Running from the browser
              this._readFile = function () {
                return undefined;
              };
            case 11:
              _context.prev = 11;
              if (!isNode()) {
                _context.next = 20;
                break;
              }
              _context.next = 15;
              return import('os');
            case 15:
              os = _context.sent;
              _context.next = 18;
              return import('path');
            case 18:
              path = _context.sent;
              // Try the home folder last.
              this._configSearchPath.push(path.join(os.homedir(), CONFIG_FILENAME));
            case 20:
              _context.next = 26;
              break;
            case 22:
              _context.prev = 22;
              _context.t1 = _context["catch"](11);
              console.log(_context.t1);
              console.log('Unable to load config from search path');
              // pass
            case 26:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[0, 8], [11, 22]]);
      }));
      function prepare() {
        return _prepare.apply(this, arguments);
      }
      return prepare;
    }()
  }, {
    key: "_read",
    value: function () {
      var _read2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(filePath, profile) {
        var str, json;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (filePath) {
                _context2.next = 2;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 2:
              if (isNode()) {
                _context2.next = 4;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 4:
              if (!(typeof this._readFile == 'undefined')) {
                _context2.next = 6;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 6:
              str = this._readFile(filePath);
              if (str) {
                _context2.next = 9;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 9:
              // Let the parsing error trickle up!
              // We want the user to know their config has a problem.
              json = JSON.parse(str);
              if (!profile) {
                _context2.next = 18;
                break;
              }
              if (json['profiles']) {
                _context2.next = 13;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 13:
              if (json['profiles'][profile]) {
                _context2.next = 15;
                break;
              }
              return _context2.abrupt("return", undefined);
            case 15:
              return _context2.abrupt("return", json['profiles'][profile]);
            case 18:
              return _context2.abrupt("return", json);
            case 19:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function _read(_x, _x2) {
        return _read2.apply(this, arguments);
      }
      return _read;
    }()
  }, {
    key: "clear",
    value: function clear() {
      this._config = {
        apiBase: DEFAULT_CONFIG.apiBase,
        appBase: DEFAULT_CONFIG.appBase,
        webBase: DEFAULT_CONFIG.webBase
      };
    }
  }, {
    key: "loadFromFile",
    value: function () {
      var _loadFromFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(filename, profile) {
        var config;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if (filename) {
                _context3.next = 2;
                break;
              }
              return _context3.abrupt("return", false);
            case 2:
              _context3.next = 4;
              return this._read(filename, profile);
            case 4:
              config = _context3.sent;
              if (config) {
                _context3.next = 7;
                break;
              }
              return _context3.abrupt("return", false);
            case 7:
              if (config.apiBase) {
                this._config.apiBase = config.apiBase;
              }
              if (config.appBase) {
                this._config.appBase = config.appBase;
              }
              if (config.webBase) {
                this._config.webBase = config.webBase;
              }
              if (config.apiKey) {
                this._config.apiKey = config.apiKey;
              }
              if (config.workspaceId) {
                this._config.workspaceId = config.workspaceId;
              }
              if (config.workspaceHandle) {
                this._config.workspaceHandle = config.workspaceHandle;
              }
              return _context3.abrupt("return", true);
            case 14:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function loadFromFile(_x3, _x4) {
        return _loadFromFile.apply(this, arguments);
      }
      return loadFromFile;
    }()
  }, {
    key: "tryAutofindingFiles",
    value: function () {
      var _tryAutofindingFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(profile) {
        var _iterator, _step, configPath, found;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _iterator = _createForOfIteratorHelperLoose(this._configSearchPath);
            case 1:
              if ((_step = _iterator()).done) {
                _context4.next = 10;
                break;
              }
              configPath = _step.value;
              _context4.next = 5;
              return this.loadFromFile(configPath, profile);
            case 5:
              found = _context4.sent;
              if (!found) {
                _context4.next = 8;
                break;
              }
              return _context4.abrupt("return", true);
            case 8:
              _context4.next = 1;
              break;
            case 10:
              return _context4.abrupt("return", false);
            case 11:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function tryAutofindingFiles(_x5) {
        return _tryAutofindingFiles.apply(this, arguments);
      }
      return tryAutofindingFiles;
    }()
  }, {
    key: "loadEnvVars",
    value: function () {
      var _loadEnvVars = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              if (typeof process != 'undefined' && typeof process.env != 'undefined') {
                try {
                  if (process.env['STEAMSHIP_API_BASE']) {
                    this._config.apiBase = process.env['STEAMSHIP_API_BASE'];
                  }
                  if (process.env['STEAMSHIP_APP_BASE']) {
                    this._config.appBase = process.env['STEAMSHIP_APP_BASE'];
                  }
                  if (process.env['STEAMSHIP_WEB_BASE']) {
                    this._config.webBase = process.env['STEAMSHIP_WEB_BASE'];
                  }
                  if (process.env['STEAMSHIP_API_KEY']) {
                    this._config.apiKey = process.env['STEAMSHIP_API_KEY'];
                  }
                  if (process.env['STEAMSHIP_WORKSPACE_ID']) {
                    this._config.workspaceId = process.env['STEAMSHIP_WORKSPACE_ID'];
                  }
                  if (process.env['STEAMSHIP_WORKSPACE_HANDLE']) {
                    this._config.workspaceHandle = process.env['STEAMSHIP_WORKSPACE_HANDLE'];
                  }
                } catch (_unused2) {
                  // pass
                }
              }
            case 1:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function loadEnvVars() {
        return _loadEnvVars.apply(this, arguments);
      }
      return loadEnvVars;
    }()
  }, {
    key: "applyManualOverrides",
    value: function applyManualOverrides(params) {
      if (params != null && params.apiBase) {
        this._config.apiBase = params == null ? void 0 : params.apiBase;
      }
      if (params != null && params.appBase) {
        this._config.appBase = params == null ? void 0 : params.appBase;
      }
      if (params != null && params.webBase) {
        this._config.webBase = params == null ? void 0 : params.webBase;
      }
      if (params != null && params.apiKey) {
        this._config.apiKey = params == null ? void 0 : params.apiKey;
      }
      if (params != null && params.workspace) {
        this._config.workspaceHandle = params == null ? void 0 : params.workspace;
      }
    }
  }, {
    key: "load",
    value: function () {
      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(params) {
        var found;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return this.prepare();
            case 2:
              this.clear();

              // First set the profile.
              if (typeof process != 'undefined' && typeof process.env != 'undefined') {
                if (process.env['STEAMSHIP_PROFILE']) {
                  this._config.profile = process.env['STEAMSHIP_PROFILE'];
                }
              }
              if (params != null && params.profile) {
                this._config.profile = params == null ? void 0 : params.profile;
              }

              // Then load from a file if provided
              if (!(params != null && params.configFile)) {
                _context6.next = 13;
                break;
              }
              _context6.next = 8;
              return this.loadFromFile(params == null ? void 0 : params.configFile, this._config.profile);
            case 8:
              found = _context6.sent;
              if (found) {
                _context6.next = 11;
                break;
              }
              throw "Configuration path provided but no configuration found at '" + (params == null ? void 0 : params.configFile) + "'";
            case 11:
              _context6.next = 15;
              break;
            case 13:
              _context6.next = 15;
              return this.tryAutofindingFiles(this._config.profile);
            case 15:
              _context6.next = 17;
              return this.loadEnvVars();
            case 17:
              // Apply manual overrides
              this.applyManualOverrides(params);

              // Fix the base
              if (this._config.apiBase) {
                if (this._config.apiBase[this._config.apiBase.length - 1] != '/') {
                  this._config.apiBase = this._config.apiBase + "/";
                }
              }
              if (this._config.appBase) {
                if (this._config.appBase[this._config.appBase.length - 1] != '/') {
                  this._config.appBase = this._config.appBase + "/";
                }
              }
              if (this._config.webBase) {
                if (this._config.webBase[this._config.webBase.length - 1] != '/') {
                  this._config.webBase = this._config.webBase + "/";
                }
              }
              return _context6.abrupt("return", this._config);
            case 22:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function load(_x6) {
        return _load.apply(this, arguments);
      }
      return load;
    }()
  }, {
    key: "modifyConfiguration",
    value: function () {
      var _modifyConfiguration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(values, profile, configFile) {
        var os, path, str, newConfig;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return this.prepare();
            case 2:
              if (!(!isNode() || typeof this._readFile == 'undefined' || typeof this._writeFile == 'undefined')) {
                _context7.next = 4;
                break;
              }
              throw 'Could not save configuration, no filesystem found.';
            case 4:
              _context7.next = 6;
              return import('os');
            case 6:
              os = _context7.sent;
              _context7.next = 9;
              return import('path');
            case 9:
              path = _context7.sent;
              if (!(typeof configFile === 'string' && configFile.trim() === '')) {
                _context7.next = 12;
                break;
              }
              throw 'An invalid save location was given.';
            case 12:
              if (!configFile) {
                configFile = path.join(os.homedir(), CONFIG_FILENAME);
              }
              str = this._readFile(configFile);
              newConfig = _extends({}, DEFAULT_CONFIG);
              if (str) {
                try {
                  newConfig = JSON.parse(str);
                } catch (e) {
                  // If there is an issue with the config, we just use the default
                }
              }

              // Now set the desired values. If there is a profile, only do this to that
              // profile. Otherwise, override the fields.
              if (profile) {
                if (!newConfig.profiles) {
                  newConfig.profiles = {}; // Add the profiles field if it does not exist
                }

                if (!Object.keys(newConfig.profiles).includes(profile)) {
                  newConfig.profiles[profile] = {
                    profile: profile
                  }; // Adds this specific profile
                }

                Object.keys(values).forEach(function (key) {
                  if (key === 'profiles') {
                    throw 'Cannot save a profiles list within a profile itself. A `profiles` modification is only allowed on the default config (i.e. leave `profile` blank)';
                  }
                  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                  // @ts-ignore
                  newConfig.profiles[profile][key] = values[key];
                });
              } else {
                Object.keys(values).forEach(function (key) {
                  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                  // @ts-ignore
                  newConfig[key] = values[key];
                });
              }

              // Finally, save the configuration
              this._writeFile(configFile, JSON.stringify(newConfig, undefined, 2));
            case 18:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function modifyConfiguration(_x7, _x8, _x9) {
        return _modifyConfiguration.apply(this, arguments);
      }
      return modifyConfiguration;
    }()
  }]);
  return ConfigManager;
}();
export function loadConfiguration(_x10) {
  return _loadConfiguration.apply(this, arguments);
}

/**
 * Modifies or creates a configuration given the desired values. Allows
 * modifying the default profile, or modifying individual profiles by
 * providing a `profile` parameter. If no configFile is given, defaults
 * to the default location (home directory / .steamship.json).
 * Note: If the configFile already exists, the existing file is modified.
 *       If the file is corrupt or missing, a new file is created
 * @param values The values to save to the config or profile
 * @param profile (Optional) The profile to override. Defaults to the default
 *                profile.
 * @param configFile (Optional) The absolute location to the file to save
 *                   to. Defaults to (home directory / .steamship.json)
 */
function _loadConfiguration() {
  _loadConfiguration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(params) {
    var configManager;
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          configManager = new ConfigManager();
          _context8.next = 3;
          return configManager.load(params);
        case 3:
          return _context8.abrupt("return", _context8.sent);
        case 4:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  }));
  return _loadConfiguration.apply(this, arguments);
}
export function saveConfiguration(_x11, _x12, _x13) {
  return _saveConfiguration.apply(this, arguments);
}
function _saveConfiguration() {
  _saveConfiguration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(values, profile, configFile) {
    var configManager;
    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          configManager = new ConfigManager();
          _context9.next = 3;
          return configManager.modifyConfiguration(values, profile, configFile);
        case 3:
        case "end":
          return _context9.stop();
      }
    }, _callee9);
  }));
  return _saveConfiguration.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpc05vZGUiLCJERUZBVUxUX0NPTkZJRyIsImFwaUJhc2UiLCJhcHBCYXNlIiwid2ViQmFzZSIsIkNPTkZJR19GSUxFTkFNRSIsIkNvbmZpZ01hbmFnZXIiLCJ1bmRlZmluZWQiLCJmcyIsIl9yZWFkRmlsZSIsImZpbGVQYXRoIiwiZXhpc3RzU3luYyIsInJlYWRGaWxlU3luYyIsIl93cml0ZUZpbGUiLCJkYXRhIiwid3JpdGVGaWxlU3luYyIsIm9zIiwicGF0aCIsIl9jb25maWdTZWFyY2hQYXRoIiwicHVzaCIsImpvaW4iLCJob21lZGlyIiwiY29uc29sZSIsImxvZyIsInByb2ZpbGUiLCJzdHIiLCJqc29uIiwiSlNPTiIsInBhcnNlIiwiX2NvbmZpZyIsImZpbGVuYW1lIiwiX3JlYWQiLCJjb25maWciLCJhcGlLZXkiLCJ3b3Jrc3BhY2VJZCIsIndvcmtzcGFjZUhhbmRsZSIsImNvbmZpZ1BhdGgiLCJsb2FkRnJvbUZpbGUiLCJmb3VuZCIsInByb2Nlc3MiLCJlbnYiLCJwYXJhbXMiLCJ3b3Jrc3BhY2UiLCJwcmVwYXJlIiwiY2xlYXIiLCJjb25maWdGaWxlIiwidHJ5QXV0b2ZpbmRpbmdGaWxlcyIsImxvYWRFbnZWYXJzIiwiYXBwbHlNYW51YWxPdmVycmlkZXMiLCJsZW5ndGgiLCJ2YWx1ZXMiLCJ0cmltIiwibmV3Q29uZmlnIiwiZSIsInByb2ZpbGVzIiwiT2JqZWN0Iiwia2V5cyIsImluY2x1ZGVzIiwiZm9yRWFjaCIsImtleSIsInN0cmluZ2lmeSIsImxvYWRDb25maWd1cmF0aW9uIiwiY29uZmlnTWFuYWdlciIsImxvYWQiLCJzYXZlQ29uZmlndXJhdGlvbiIsIm1vZGlmeUNvbmZpZ3VyYXRpb24iXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL3NoYXJlZC9Db25maWd1cmF0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTm9kZSB9IGZyb20gJy4uL3V0aWxzLmpzJztcblxuLypcbiAqIFRoZSBnb2FsIG9mIHRoaXMgZmlsZSBpcyB0byBwcm92aWRlIGEgY3JlZGVudGlhbC1sb2FkaW5nIHN5c3RlbVxuICogdGhhdCBpcyBzYWZlIGluIEJPVEggdGhlIGNvbW1hbmQgbGluZSBhbmQgdGhlIGJyb3dzZXIuXG4gKi9cblxuZXhwb3J0IGludGVyZmFjZSBDb25maWd1cmF0aW9uIHtcbiAgYXBpS2V5Pzogc3RyaW5nO1xuICBhcGlCYXNlPzogc3RyaW5nO1xuICBhcHBCYXNlPzogc3RyaW5nO1xuICB3ZWJCYXNlPzogc3RyaW5nO1xuICB3b3Jrc3BhY2VJZD86IHN0cmluZztcbiAgd29ya3NwYWNlSGFuZGxlPzogc3RyaW5nO1xuICBwcm9maWxlPzogc3RyaW5nO1xuICBwcm9maWxlcz86IHsgW25hbWU6IHN0cmluZ106IENvbmZpZ3VyYXRpb24gfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2FkQ29uZmlnUGFyYW1zIHtcbiAgYXBpS2V5Pzogc3RyaW5nO1xuICBhcGlCYXNlPzogc3RyaW5nOyAvLyBodHRwczovL2FwaS5zdGVhbXNoaXAuY29tL2FwaS92MVxuICBhcHBCYXNlPzogc3RyaW5nOyAvLyBodHRwczovL3N0ZWFtc2hpcC5ydW4vXG4gIHdlYkJhc2U/OiBzdHJpbmc7IC8vIGh0dHBzOi8vYXBwLnN0ZWFtc2hpcC5jb21cbiAgd29ya3NwYWNlPzogc3RyaW5nO1xuICBwcm9maWxlPzogc3RyaW5nO1xuICBjb25maWdGaWxlPzogc3RyaW5nOyAvLyBjb25maWcgZmlsZSBvbiBkaXNrXG4gIGZhaWxJZldvcmtzcGFjZUV4aXN0cz86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2F2ZUNvbmZpZ1BhcmFtcyB7XG4gIGFwaUtleT86IHN0cmluZztcbiAgYXBpQmFzZT86IHN0cmluZztcbiAgYXBwQmFzZT86IHN0cmluZztcbiAgd2ViQmFzZT86IHN0cmluZztcbiAgd29ya3NwYWNlSWQ/OiBzdHJpbmc7XG4gIHdvcmtzcGFjZUhhbmRsZT86IHN0cmluZztcbiAgcHJvZmlsZT86IHN0cmluZztcbiAgcHJvZmlsZXM/OiB7IFtuYW1lOiBzdHJpbmddOiBDb25maWd1cmF0aW9uIH07IC8vIE9ubHkgYWxsb3dlZCBpZiBub3QgbW9kaWZ5aW5nIGEgcHJvZmlsZVxufVxuXG5leHBvcnQgY29uc3QgREVGQVVMVF9DT05GSUc6IHtcbiAgYXBpQmFzZTogc3RyaW5nO1xuICBhcHBCYXNlOiBzdHJpbmc7XG4gIHdlYkJhc2U6IHN0cmluZztcbn0gPSB7XG4gIGFwaUJhc2U6ICdodHRwczovL2FwaS5zdGVhbXNoaXAuY29tL2FwaS92MS8nLFxuICBhcHBCYXNlOiAnaHR0cHM6Ly9zdGVhbXNoaXAucnVuLycsXG4gIHdlYkJhc2U6ICdodHRwczovL2FwcC5zdGVhbXNoaXAuY29tLycsXG59O1xuXG4vLyBjb25zdCBkZWZhdWx0U3RhZ2luZ0NyZWRlbnRpYWxzID0ge1xuLy8gICBhcGlCYXNlOiBcImh0dHBzOi8vYXBpLnN0YWdpbmcuc3RlYW1zaGlwLmNvbS9hcGkvdjFcIixcbi8vICAgYXBwQmFzZTogXCJodHRwczovL3N0YWdpbmcuc3RlYW1zaGlwLmNvbS9hcGkvdjFcIlxuLy8gfVxuXG5leHBvcnQgY29uc3QgQ09ORklHX0ZJTEVOQU1FID0gJy5zdGVhbXNoaXAuanNvbic7XG5cbmNsYXNzIENvbmZpZ01hbmFnZXIge1xuICBfcmVhZEZpbGU6IHVuZGVmaW5lZCB8ICgoZmlsZVBhdGg6IHN0cmluZykgPT4gc3RyaW5nIHwgdW5kZWZpbmVkKSA9IHVuZGVmaW5lZDtcbiAgX3dyaXRlRmlsZTogdW5kZWZpbmVkIHwgKChmaWxlUGF0aDogc3RyaW5nLCBkYXRhOiBzdHJpbmcpID0+IHZvaWQpID1cbiAgICB1bmRlZmluZWQ7XG4gIF9jb25maWdTZWFyY2hQYXRoOiBzdHJpbmdbXSA9IFtdO1xuICBfY29uZmlnOiBDb25maWd1cmF0aW9uID0ge307XG5cbiAgYXN5bmMgcHJlcGFyZSgpIHtcbiAgICAvLyBDcmVhdGUgdGhlIF9yZWFkRmlsZSBmdW5jdGlvblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBmcyA9IGF3YWl0IGltcG9ydCgnZnMnKTtcbiAgICAgIHRoaXMuX3JlYWRGaWxlID0gKGZpbGVQYXRoOiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQgPT4ge1xuICAgICAgICBpZiAoIWZzLmV4aXN0c1N5bmMoZmlsZVBhdGgpKSB7XG4gICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZnMucmVhZEZpbGVTeW5jKGZpbGVQYXRoLCAndXRmOCcpO1xuICAgICAgfTtcbiAgICAgIHRoaXMuX3dyaXRlRmlsZSA9IChmaWxlUGF0aDogc3RyaW5nLCBkYXRhOiBzdHJpbmcpID0+IHtcbiAgICAgICAgZnMud3JpdGVGaWxlU3luYyhmaWxlUGF0aCwgZGF0YSk7XG4gICAgICB9O1xuICAgIH0gY2F0Y2gge1xuICAgICAgLy8gUnVubmluZyBmcm9tIHRoZSBicm93c2VyXG4gICAgICB0aGlzLl9yZWFkRmlsZSA9ICgpOiBzdHJpbmcgfCB1bmRlZmluZWQgPT4ge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaWYgKGlzTm9kZSgpKSB7XG4gICAgICAgIC8vIEZpcnN0IHNlYXJjaCBmb3IgLnN0ZWFtc2hpcC5qc29uIGluIHRoZSBjdXJyZW50IHRyZWUuXG4gICAgICAgIGNvbnN0IG9zID0gYXdhaXQgaW1wb3J0KCdvcycpO1xuICAgICAgICBjb25zdCBwYXRoID0gYXdhaXQgaW1wb3J0KCdwYXRoJyk7XG4gICAgICAgIC8vIFRyeSB0aGUgaG9tZSBmb2xkZXIgbGFzdC5cbiAgICAgICAgdGhpcy5fY29uZmlnU2VhcmNoUGF0aC5wdXNoKHBhdGguam9pbihvcy5ob21lZGlyKCksIENPTkZJR19GSUxFTkFNRSkpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICBjb25zb2xlLmxvZyhleCk7XG4gICAgICBjb25zb2xlLmxvZygnVW5hYmxlIHRvIGxvYWQgY29uZmlnIGZyb20gc2VhcmNoIHBhdGgnKTtcbiAgICAgIC8vIHBhc3NcbiAgICB9XG4gIH1cblxuICBhc3luYyBfcmVhZChcbiAgICBmaWxlUGF0aD86IHN0cmluZyxcbiAgICBwcm9maWxlPzogc3RyaW5nXG4gICk6IFByb21pc2U8Q29uZmlndXJhdGlvbiB8IHVuZGVmaW5lZD4ge1xuICAgIGlmICghZmlsZVBhdGgpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICghaXNOb2RlKCkpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdGhpcy5fcmVhZEZpbGUgPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgY29uc3Qgc3RyID0gdGhpcy5fcmVhZEZpbGUoZmlsZVBhdGgpO1xuICAgIGlmICghc3RyKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvLyBMZXQgdGhlIHBhcnNpbmcgZXJyb3IgdHJpY2tsZSB1cCFcbiAgICAvLyBXZSB3YW50IHRoZSB1c2VyIHRvIGtub3cgdGhlaXIgY29uZmlnIGhhcyBhIHByb2JsZW0uXG4gICAgY29uc3QganNvbiA9IEpTT04ucGFyc2Uoc3RyKTtcblxuICAgIGlmIChwcm9maWxlKSB7XG4gICAgICBpZiAoIWpzb25bJ3Byb2ZpbGVzJ10pIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICAgIGlmICghanNvblsncHJvZmlsZXMnXVtwcm9maWxlXSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGpzb25bJ3Byb2ZpbGVzJ11bcHJvZmlsZV0gYXMgQ29uZmlndXJhdGlvbjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGpzb24gYXMgQ29uZmlndXJhdGlvbjtcbiAgICB9XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICB0aGlzLl9jb25maWcgPSB7XG4gICAgICBhcGlCYXNlOiBERUZBVUxUX0NPTkZJRy5hcGlCYXNlLFxuICAgICAgYXBwQmFzZTogREVGQVVMVF9DT05GSUcuYXBwQmFzZSxcbiAgICAgIHdlYkJhc2U6IERFRkFVTFRfQ09ORklHLndlYkJhc2UsXG4gICAgfTtcbiAgfVxuXG4gIGFzeW5jIGxvYWRGcm9tRmlsZShmaWxlbmFtZT86IHN0cmluZywgcHJvZmlsZT86IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGlmICghZmlsZW5hbWUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgY29uZmlnID0gYXdhaXQgdGhpcy5fcmVhZChmaWxlbmFtZSwgcHJvZmlsZSk7XG4gICAgaWYgKCFjb25maWcpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZy5hcGlCYXNlKSB7XG4gICAgICB0aGlzLl9jb25maWcuYXBpQmFzZSA9IGNvbmZpZy5hcGlCYXNlO1xuICAgIH1cbiAgICBpZiAoY29uZmlnLmFwcEJhc2UpIHtcbiAgICAgIHRoaXMuX2NvbmZpZy5hcHBCYXNlID0gY29uZmlnLmFwcEJhc2U7XG4gICAgfVxuICAgIGlmIChjb25maWcud2ViQmFzZSkge1xuICAgICAgdGhpcy5fY29uZmlnLndlYkJhc2UgPSBjb25maWcud2ViQmFzZTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZy5hcGlLZXkpIHtcbiAgICAgIHRoaXMuX2NvbmZpZy5hcGlLZXkgPSBjb25maWcuYXBpS2V5O1xuICAgIH1cbiAgICBpZiAoY29uZmlnLndvcmtzcGFjZUlkKSB7XG4gICAgICB0aGlzLl9jb25maWcud29ya3NwYWNlSWQgPSBjb25maWcud29ya3NwYWNlSWQ7XG4gICAgfVxuICAgIGlmIChjb25maWcud29ya3NwYWNlSGFuZGxlKSB7XG4gICAgICB0aGlzLl9jb25maWcud29ya3NwYWNlSGFuZGxlID0gY29uZmlnLndvcmtzcGFjZUhhbmRsZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBhc3luYyB0cnlBdXRvZmluZGluZ0ZpbGVzKHByb2ZpbGU/OiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICBmb3IgKGNvbnN0IGNvbmZpZ1BhdGggb2YgdGhpcy5fY29uZmlnU2VhcmNoUGF0aCkge1xuICAgICAgY29uc3QgZm91bmQgPSBhd2FpdCB0aGlzLmxvYWRGcm9tRmlsZShjb25maWdQYXRoLCBwcm9maWxlKTtcbiAgICAgIGlmIChmb3VuZCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgYXN5bmMgbG9hZEVudlZhcnMoKSB7XG4gICAgaWYgKHR5cGVvZiBwcm9jZXNzICE9ICd1bmRlZmluZWQnICYmIHR5cGVvZiBwcm9jZXNzLmVudiAhPSAndW5kZWZpbmVkJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52WydTVEVBTVNISVBfQVBJX0JBU0UnXSkge1xuICAgICAgICAgIHRoaXMuX2NvbmZpZy5hcGlCYXNlID0gcHJvY2Vzcy5lbnZbJ1NURUFNU0hJUF9BUElfQkFTRSddO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9jZXNzLmVudlsnU1RFQU1TSElQX0FQUF9CQVNFJ10pIHtcbiAgICAgICAgICB0aGlzLl9jb25maWcuYXBwQmFzZSA9IHByb2Nlc3MuZW52WydTVEVBTVNISVBfQVBQX0JBU0UnXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvY2Vzcy5lbnZbJ1NURUFNU0hJUF9XRUJfQkFTRSddKSB7XG4gICAgICAgICAgdGhpcy5fY29uZmlnLndlYkJhc2UgPSBwcm9jZXNzLmVudlsnU1RFQU1TSElQX1dFQl9CQVNFJ107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52WydTVEVBTVNISVBfQVBJX0tFWSddKSB7XG4gICAgICAgICAgdGhpcy5fY29uZmlnLmFwaUtleSA9IHByb2Nlc3MuZW52WydTVEVBTVNISVBfQVBJX0tFWSddO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9jZXNzLmVudlsnU1RFQU1TSElQX1dPUktTUEFDRV9JRCddKSB7XG4gICAgICAgICAgdGhpcy5fY29uZmlnLndvcmtzcGFjZUlkID0gcHJvY2Vzcy5lbnZbJ1NURUFNU0hJUF9XT1JLU1BBQ0VfSUQnXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvY2Vzcy5lbnZbJ1NURUFNU0hJUF9XT1JLU1BBQ0VfSEFORExFJ10pIHtcbiAgICAgICAgICB0aGlzLl9jb25maWcud29ya3NwYWNlSGFuZGxlID1cbiAgICAgICAgICAgIHByb2Nlc3MuZW52WydTVEVBTVNISVBfV09SS1NQQUNFX0hBTkRMRSddO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIHtcbiAgICAgICAgLy8gcGFzc1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGFwcGx5TWFudWFsT3ZlcnJpZGVzKHBhcmFtcz86IExvYWRDb25maWdQYXJhbXMpIHtcbiAgICBpZiAocGFyYW1zPy5hcGlCYXNlKSB7XG4gICAgICB0aGlzLl9jb25maWcuYXBpQmFzZSA9IHBhcmFtcz8uYXBpQmFzZTtcbiAgICB9XG4gICAgaWYgKHBhcmFtcz8uYXBwQmFzZSkge1xuICAgICAgdGhpcy5fY29uZmlnLmFwcEJhc2UgPSBwYXJhbXM/LmFwcEJhc2U7XG4gICAgfVxuICAgIGlmIChwYXJhbXM/LndlYkJhc2UpIHtcbiAgICAgIHRoaXMuX2NvbmZpZy53ZWJCYXNlID0gcGFyYW1zPy53ZWJCYXNlO1xuICAgIH1cbiAgICBpZiAocGFyYW1zPy5hcGlLZXkpIHtcbiAgICAgIHRoaXMuX2NvbmZpZy5hcGlLZXkgPSBwYXJhbXM/LmFwaUtleTtcbiAgICB9XG4gICAgaWYgKHBhcmFtcz8ud29ya3NwYWNlKSB7XG4gICAgICB0aGlzLl9jb25maWcud29ya3NwYWNlSGFuZGxlID0gcGFyYW1zPy53b3Jrc3BhY2U7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgbG9hZChwYXJhbXM/OiBMb2FkQ29uZmlnUGFyYW1zKTogUHJvbWlzZTxDb25maWd1cmF0aW9uPiB7XG4gICAgYXdhaXQgdGhpcy5wcmVwYXJlKCk7XG4gICAgdGhpcy5jbGVhcigpO1xuXG4gICAgLy8gRmlyc3Qgc2V0IHRoZSBwcm9maWxlLlxuICAgIGlmICh0eXBlb2YgcHJvY2VzcyAhPSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgcHJvY2Vzcy5lbnYgIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudlsnU1RFQU1TSElQX1BST0ZJTEUnXSkge1xuICAgICAgICB0aGlzLl9jb25maWcucHJvZmlsZSA9IHByb2Nlc3MuZW52WydTVEVBTVNISVBfUFJPRklMRSddO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocGFyYW1zPy5wcm9maWxlKSB7XG4gICAgICB0aGlzLl9jb25maWcucHJvZmlsZSA9IHBhcmFtcz8ucHJvZmlsZTtcbiAgICB9XG5cbiAgICAvLyBUaGVuIGxvYWQgZnJvbSBhIGZpbGUgaWYgcHJvdmlkZWRcbiAgICBpZiAocGFyYW1zPy5jb25maWdGaWxlKSB7XG4gICAgICBjb25zdCBmb3VuZCA9IGF3YWl0IHRoaXMubG9hZEZyb21GaWxlKFxuICAgICAgICBwYXJhbXM/LmNvbmZpZ0ZpbGUsXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wcm9maWxlXG4gICAgICApO1xuICAgICAgaWYgKCFmb3VuZCkge1xuICAgICAgICB0aHJvdyBgQ29uZmlndXJhdGlvbiBwYXRoIHByb3ZpZGVkIGJ1dCBubyBjb25maWd1cmF0aW9uIGZvdW5kIGF0ICcke3BhcmFtcz8uY29uZmlnRmlsZX0nYDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgYXdhaXQgdGhpcy50cnlBdXRvZmluZGluZ0ZpbGVzKHRoaXMuX2NvbmZpZy5wcm9maWxlKTtcbiAgICB9XG5cbiAgICAvLyBBcHBseSBFbnYgVmFyaWFibGVzXG4gICAgYXdhaXQgdGhpcy5sb2FkRW52VmFycygpO1xuXG4gICAgLy8gQXBwbHkgbWFudWFsIG92ZXJyaWRlc1xuICAgIHRoaXMuYXBwbHlNYW51YWxPdmVycmlkZXMocGFyYW1zKTtcblxuICAgIC8vIEZpeCB0aGUgYmFzZVxuICAgIGlmICh0aGlzLl9jb25maWcuYXBpQmFzZSkge1xuICAgICAgaWYgKHRoaXMuX2NvbmZpZy5hcGlCYXNlW3RoaXMuX2NvbmZpZy5hcGlCYXNlLmxlbmd0aCAtIDFdICE9ICcvJykge1xuICAgICAgICB0aGlzLl9jb25maWcuYXBpQmFzZSA9IGAke3RoaXMuX2NvbmZpZy5hcGlCYXNlfS9gO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAodGhpcy5fY29uZmlnLmFwcEJhc2UpIHtcbiAgICAgIGlmICh0aGlzLl9jb25maWcuYXBwQmFzZVt0aGlzLl9jb25maWcuYXBwQmFzZS5sZW5ndGggLSAxXSAhPSAnLycpIHtcbiAgICAgICAgdGhpcy5fY29uZmlnLmFwcEJhc2UgPSBgJHt0aGlzLl9jb25maWcuYXBwQmFzZX0vYDtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHRoaXMuX2NvbmZpZy53ZWJCYXNlKSB7XG4gICAgICBpZiAodGhpcy5fY29uZmlnLndlYkJhc2VbdGhpcy5fY29uZmlnLndlYkJhc2UubGVuZ3RoIC0gMV0gIT0gJy8nKSB7XG4gICAgICAgIHRoaXMuX2NvbmZpZy53ZWJCYXNlID0gYCR7dGhpcy5fY29uZmlnLndlYkJhc2V9L2A7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9jb25maWc7XG4gIH1cblxuICBhc3luYyBtb2RpZnlDb25maWd1cmF0aW9uKFxuICAgIHZhbHVlczogU2F2ZUNvbmZpZ1BhcmFtcyxcbiAgICBwcm9maWxlPzogc3RyaW5nLFxuICAgIGNvbmZpZ0ZpbGU/OiBzdHJpbmdcbiAgKSB7XG4gICAgYXdhaXQgdGhpcy5wcmVwYXJlKCk7XG4gICAgaWYgKFxuICAgICAgIWlzTm9kZSgpIHx8XG4gICAgICB0eXBlb2YgdGhpcy5fcmVhZEZpbGUgPT0gJ3VuZGVmaW5lZCcgfHxcbiAgICAgIHR5cGVvZiB0aGlzLl93cml0ZUZpbGUgPT0gJ3VuZGVmaW5lZCdcbiAgICApIHtcbiAgICAgIHRocm93ICdDb3VsZCBub3Qgc2F2ZSBjb25maWd1cmF0aW9uLCBubyBmaWxlc3lzdGVtIGZvdW5kLic7XG4gICAgfVxuXG4gICAgY29uc3Qgb3MgPSBhd2FpdCBpbXBvcnQoJ29zJyk7XG4gICAgY29uc3QgcGF0aCA9IGF3YWl0IGltcG9ydCgncGF0aCcpO1xuXG4gICAgLy8gTG9hZCB0aGUgY29uZmlnIGZpbGUgZnJvbSB0aGUgZ2l2ZW4gcGF0aCBvciB0aGUgZGVmYXVsdCBwYXRoXG4gICAgLy8gSWYgdGhlIGZpbGUgZG9lcyBub3QgZXhpc3QsIGNyZWF0ZSBhIG5ldyBjb25maWdcblxuICAgIGlmICh0eXBlb2YgY29uZmlnRmlsZSA9PT0gJ3N0cmluZycgJiYgY29uZmlnRmlsZS50cmltKCkgPT09ICcnKSB7XG4gICAgICB0aHJvdyAnQW4gaW52YWxpZCBzYXZlIGxvY2F0aW9uIHdhcyBnaXZlbi4nO1xuICAgIH1cblxuICAgIGlmICghY29uZmlnRmlsZSkge1xuICAgICAgY29uZmlnRmlsZSA9IHBhdGguam9pbihvcy5ob21lZGlyKCksIENPTkZJR19GSUxFTkFNRSk7XG4gICAgfVxuICAgIGNvbnN0IHN0ciA9IHRoaXMuX3JlYWRGaWxlKGNvbmZpZ0ZpbGUpO1xuICAgIGxldCBuZXdDb25maWc6IENvbmZpZ3VyYXRpb24gPSB7IC4uLkRFRkFVTFRfQ09ORklHIH07XG4gICAgaWYgKHN0cikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgbmV3Q29uZmlnID0gSlNPTi5wYXJzZShzdHIpIGFzIENvbmZpZ3VyYXRpb247XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIElmIHRoZXJlIGlzIGFuIGlzc3VlIHdpdGggdGhlIGNvbmZpZywgd2UganVzdCB1c2UgdGhlIGRlZmF1bHRcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBOb3cgc2V0IHRoZSBkZXNpcmVkIHZhbHVlcy4gSWYgdGhlcmUgaXMgYSBwcm9maWxlLCBvbmx5IGRvIHRoaXMgdG8gdGhhdFxuICAgIC8vIHByb2ZpbGUuIE90aGVyd2lzZSwgb3ZlcnJpZGUgdGhlIGZpZWxkcy5cbiAgICBpZiAocHJvZmlsZSkge1xuICAgICAgaWYgKCFuZXdDb25maWcucHJvZmlsZXMpIHtcbiAgICAgICAgbmV3Q29uZmlnLnByb2ZpbGVzID0ge307IC8vIEFkZCB0aGUgcHJvZmlsZXMgZmllbGQgaWYgaXQgZG9lcyBub3QgZXhpc3RcbiAgICAgIH1cbiAgICAgIGlmICghT2JqZWN0LmtleXMobmV3Q29uZmlnLnByb2ZpbGVzKS5pbmNsdWRlcyhwcm9maWxlKSkge1xuICAgICAgICBuZXdDb25maWcucHJvZmlsZXNbcHJvZmlsZV0gPSB7IHByb2ZpbGU6IHByb2ZpbGUgfTsgLy8gQWRkcyB0aGlzIHNwZWNpZmljIHByb2ZpbGVcbiAgICAgIH1cbiAgICAgIE9iamVjdC5rZXlzKHZhbHVlcykuZm9yRWFjaCgoa2V5OiBzdHJpbmcpID0+IHtcbiAgICAgICAgaWYgKGtleSA9PT0gJ3Byb2ZpbGVzJykge1xuICAgICAgICAgIHRocm93ICdDYW5ub3Qgc2F2ZSBhIHByb2ZpbGVzIGxpc3Qgd2l0aGluIGEgcHJvZmlsZSBpdHNlbGYuIEEgYHByb2ZpbGVzYCBtb2RpZmljYXRpb24gaXMgb25seSBhbGxvd2VkIG9uIHRoZSBkZWZhdWx0IGNvbmZpZyAoaS5lLiBsZWF2ZSBgcHJvZmlsZWAgYmxhbmspJztcbiAgICAgICAgfVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgbmV3Q29uZmlnLnByb2ZpbGVzW3Byb2ZpbGVdW2tleV0gPVxuICAgICAgICAgIHZhbHVlc1trZXkgYXMga2V5b2YgU2F2ZUNvbmZpZ1BhcmFtc107XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgT2JqZWN0LmtleXModmFsdWVzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudFxuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIG5ld0NvbmZpZ1trZXldID0gdmFsdWVzW2tleSBhcyBrZXlvZiBTYXZlQ29uZmlnUGFyYW1zXTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEZpbmFsbHksIHNhdmUgdGhlIGNvbmZpZ3VyYXRpb25cbiAgICB0aGlzLl93cml0ZUZpbGUoY29uZmlnRmlsZSwgSlNPTi5zdHJpbmdpZnkobmV3Q29uZmlnLCB1bmRlZmluZWQsIDIpKTtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZENvbmZpZ3VyYXRpb24oXG4gIHBhcmFtcz86IExvYWRDb25maWdQYXJhbXNcbik6IFByb21pc2U8Q29uZmlndXJhdGlvbj4ge1xuICBjb25zdCBjb25maWdNYW5hZ2VyID0gbmV3IENvbmZpZ01hbmFnZXIoKTtcbiAgcmV0dXJuIGF3YWl0IGNvbmZpZ01hbmFnZXIubG9hZChwYXJhbXMpO1xufVxuXG4vKipcbiAqIE1vZGlmaWVzIG9yIGNyZWF0ZXMgYSBjb25maWd1cmF0aW9uIGdpdmVuIHRoZSBkZXNpcmVkIHZhbHVlcy4gQWxsb3dzXG4gKiBtb2RpZnlpbmcgdGhlIGRlZmF1bHQgcHJvZmlsZSwgb3IgbW9kaWZ5aW5nIGluZGl2aWR1YWwgcHJvZmlsZXMgYnlcbiAqIHByb3ZpZGluZyBhIGBwcm9maWxlYCBwYXJhbWV0ZXIuIElmIG5vIGNvbmZpZ0ZpbGUgaXMgZ2l2ZW4sIGRlZmF1bHRzXG4gKiB0byB0aGUgZGVmYXVsdCBsb2NhdGlvbiAoaG9tZSBkaXJlY3RvcnkgLyAuc3RlYW1zaGlwLmpzb24pLlxuICogTm90ZTogSWYgdGhlIGNvbmZpZ0ZpbGUgYWxyZWFkeSBleGlzdHMsIHRoZSBleGlzdGluZyBmaWxlIGlzIG1vZGlmaWVkLlxuICogICAgICAgSWYgdGhlIGZpbGUgaXMgY29ycnVwdCBvciBtaXNzaW5nLCBhIG5ldyBmaWxlIGlzIGNyZWF0ZWRcbiAqIEBwYXJhbSB2YWx1ZXMgVGhlIHZhbHVlcyB0byBzYXZlIHRvIHRoZSBjb25maWcgb3IgcHJvZmlsZVxuICogQHBhcmFtIHByb2ZpbGUgKE9wdGlvbmFsKSBUaGUgcHJvZmlsZSB0byBvdmVycmlkZS4gRGVmYXVsdHMgdG8gdGhlIGRlZmF1bHRcbiAqICAgICAgICAgICAgICAgIHByb2ZpbGUuXG4gKiBAcGFyYW0gY29uZmlnRmlsZSAoT3B0aW9uYWwpIFRoZSBhYnNvbHV0ZSBsb2NhdGlvbiB0byB0aGUgZmlsZSB0byBzYXZlXG4gKiAgICAgICAgICAgICAgICAgICB0by4gRGVmYXVsdHMgdG8gKGhvbWUgZGlyZWN0b3J5IC8gLnN0ZWFtc2hpcC5qc29uKVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2F2ZUNvbmZpZ3VyYXRpb24oXG4gIHZhbHVlczogU2F2ZUNvbmZpZ1BhcmFtcyxcbiAgcHJvZmlsZT86IHN0cmluZyxcbiAgY29uZmlnRmlsZT86IHN0cmluZ1xuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnN0IGNvbmZpZ01hbmFnZXIgPSBuZXcgQ29uZmlnTWFuYWdlcigpO1xuICBhd2FpdCBjb25maWdNYW5hZ2VyLm1vZGlmeUNvbmZpZ3VyYXRpb24odmFsdWVzLCBwcm9maWxlLCBjb25maWdGaWxlKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7OzsrQ0FDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFEQSxTQUFTQSxNQUFNLFFBQVEsYUFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7O0FBbUNBLE9BQU8sSUFBTUMsY0FJWixHQUFHO0VBQ0ZDLE9BQU8sRUFBRSxtQ0FBbUM7RUFDNUNDLE9BQU8sRUFBRSx3QkFBd0I7RUFDakNDLE9BQU8sRUFBRTtBQUNYLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTyxJQUFNQyxlQUFlLEdBQUcsaUJBQWlCO0FBQUMsSUFFM0NDLGFBQWE7RUFBQTtJQUFBO0lBQUEsbUNBQ21EQyxTQUFTO0lB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