import { Logger } from 'tslog';
import { IApiBase } from './shared/BaseInterfaces.js';
import { Configuration } from './shared/Configuration.js';
import { Task } from './task.js';
export default function getLogger(name: string): Logger;
export interface LogEntryParams {
    id?: string;
    message?: string;
    level?: string;
    timestamp: string;
    pluginId?: string;
    pluginInstanceId?: string;
    pluginVersionId?: string;
    userId?: string;
    tenantId?: string;
    workspaceId?: string;
    sessionId?: string;
    contextId?: string;
    pluginHandle?: string;
    pluginVersionHandle?: string;
    pluginInstanceHandle?: string;
    userHandle?: string;
    invocableHandle?: string;
    invocableType?: string;
    invocableVersionHandle?: string;
    invocableInstanceHandle?: string;
    httpMethod?: string;
    elapsedTimeSeconds?: string;
    component?: string;
    environment?: string;
    file?: string;
    function?: string;
    label?: string;
    line?: string;
    location?: string;
    path?: string;
    route?: string;
}
export interface LogEntryListParams {
    from?: number;
    size?: number;
    invocableHandle?: string;
    invocableVersionHandle?: string;
    invocableInstanceHandle?: string;
    invocablePath?: string;
}
export interface LogEntryList {
    count?: number;
    from?: number;
    entries?: LogEntryParams[];
}
export declare class LogEntry {
    static list(client: IApiBase, params?: LogEntryListParams, config?: Configuration): Promise<Task<LogEntryList>>;
}
