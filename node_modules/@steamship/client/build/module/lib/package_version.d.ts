import { IApiBase } from './shared/BaseInterfaces.js';
import { Configuration } from './shared/Configuration.js';
import { Task } from './task.js';
export interface GetParams {
    id?: string;
    handle?: string;
    packageId?: string;
    packageHandle?: string;
}
export interface PackageVersionListParams {
    packageId?: string;
}
export interface PackageVersionList {
    packageVersions: PackageVersion[];
}
export interface PackageVersionParams {
    id?: string;
    handle?: string;
    packageId?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    isDefault?: boolean;
    configTemplate?: Record<string, any>;
}
export interface CreateParams {
    filename: string;
    packageId: string;
    handle?: string;
    configTemplate?: Record<string, any>;
}
export declare class PackageVersion {
    id?: string;
    handle?: string;
    packageId?: string;
    createdAt?: string;
    updatedAt?: string;
    isDefault?: boolean;
    description?: string;
    client: IApiBase;
    configTemplate?: Record<string, any>;
    constructor(client: IApiBase, params: PackageVersionParams);
    static create(client: IApiBase, params: CreateParams, config?: Configuration): Promise<Task<PackageVersion>>;
    static get(client: IApiBase, params?: GetParams, config?: Configuration): Promise<Task<PackageVersion>>;
    static list(client: IApiBase, params?: PackageVersionListParams, config?: Configuration): Promise<Task<PackageVersionList>>;
}
