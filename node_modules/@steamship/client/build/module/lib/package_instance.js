function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import { SteamshipError } from './steamship_error.js';
import { Task } from './task.js';
import { Workspace } from './workspace.js';
var _EXPECT = function _EXPECT(client, data) {
  return new PackageInstance(client, data);
};
var _EXPECT_LIST = function _EXPECT_LIST(client, data) {
  if (!data) {
    return [];
  }
  return {
    packageInstances: data.packageInstances.map(function (x) {
      return _EXPECT(client, x);
    })
  };
};
export var PackageInstance = /*#__PURE__*/function () {
  function PackageInstance(client, params) {
    _classCallCheck(this, PackageInstance);
    _defineProperty(this, "id", void 0);
    _defineProperty(this, "handle", void 0);
    _defineProperty(this, "packageId", void 0);
    _defineProperty(this, "packageHandle", void 0);
    _defineProperty(this, "packageVersionId", void 0);
    _defineProperty(this, "packageVersionHandle", void 0);
    _defineProperty(this, "workspaceId", void 0);
    _defineProperty(this, "workspaceHandle", void 0);
    _defineProperty(this, "userId", void 0);
    _defineProperty(this, "userHandle", void 0);
    _defineProperty(this, "description", void 0);
    _defineProperty(this, "createdAt", void 0);
    _defineProperty(this, "updatedAt", void 0);
    _defineProperty(this, "client", void 0);
    _defineProperty(this, "invocationURL", void 0);
    _defineProperty(this, "config", void 0);
    this.client = client;
    this.id = params.id;
    this.handle = params.handle;
    this.packageId = params.packageId;
    this.packageHandle = params.packageHandle;
    this.packageVersionId = params.packageVersionId;
    this.packageVersionHandle = params.packageVersionHandle;
    this.workspaceId = params.workspaceId;
    this.workspaceHandle = params.workspaceHandle;
    this.userId = params.userId;
    this.userHandle = params.userHandle;
    this.createdAt = params.createdAt;
    this.updatedAt = params.updatedAt;
    this.description = params.description;
    this.invocationURL = params.invocationURL;
    this.config = params.config;
  }
  _createClass(PackageInstance, [{
    key: "delete",
    value: function () {
      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(config) {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.client.post('package/instance/delete', {
                id: this.id
              }, _extends({
                expect: _EXPECT,
                responsePath: 'packageInstance'
              }, config));
            case 2:
              return _context.abrupt("return", _context.sent);
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function _delete(_x) {
        return _delete2.apply(this, arguments);
      }
      return _delete;
    }()
  }, {
    key: "loadMissingWorkspaceHandle",
    value: function () {
      var _loadMissingWorkspaceHandle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var workspace;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (!(this.client && !this.workspaceHandle && this.workspaceId)) {
                _context2.next = 5;
                break;
              }
              _context2.next = 3;
              return Workspace.get(this.client, {
                id: this.workspaceId
              });
            case 3:
              workspace = _context2.sent;
              if (workspace && workspace.output) {
                this.workspaceHandle = workspace.output.handle;
              }
            case 5:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function loadMissingWorkspaceHandle() {
        return _loadMissingWorkspaceHandle.apply(this, arguments);
      }
      return loadMissingWorkspaceHandle;
    }()
    /**
     * Invokes a method on a Package, to be run in the cloud.
     *
     * @param path - The method name (HTTP path) being invoked. E.g. `greet`
     * @param params - A dictionary of parameters to provide to the method
     * @param verb? - An optional HTTP verb, either GET or POST. Default: POST.
     * @param responseType? - An optional argument for Axios response encoding
     * @returns unknown - Depends upon method implementation
     */
  }, {
    key: "invoke",
    value: function () {
      var _invoke = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(path, params, verb, responseType) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if (verb === void 0) {
                verb = 'POST';
              }
              if (responseType === void 0) {
                responseType = undefined;
              }
              _context3.next = 4;
              return this.loadMissingWorkspaceHandle();
            case 4:
              // Trim the leading / from path if there.
              if (path[0] == '/') {
                path = path.slice(1);
              }
              return _context3.abrupt("return", this.client.call(verb, "/" + this.workspaceHandle + "/" + this.handle + "/" + path, _extends({}, params), {
                isPackageCall: true,
                packageOwner: this.userHandle,
                packageId: this.packageId,
                packageInstanceId: this.id,
                rawResponse: true,
                workspaceId: this.workspaceId,
                responseType: responseType
              }));
            case 6:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function invoke(_x2, _x3, _x4, _x5) {
        return _invoke.apply(this, arguments);
      }
      return invoke;
    }()
    /**
     * Schedules the invocation of a method on a Package, to be run in the cloud.
     *
     * @param path - The method name (HTTP path) being invoked. E.g. `greet`
     * @param params - A dictionary of parameters to provide to the method
     * @param verb? - An optional HTTP verb, either GET or POST. Default: POST.
     * @param responseType? - An optional argument for Axios response encoding
     * @returns Task - A task representing the eventual response of the method
     */
  }, {
    key: "invokeAsync",
    value: function () {
      var _invokeAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(path, params, verb) {
        var _result$data;
        var payload, operation, result, _result$data2;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              if (verb === void 0) {
                verb = 'POST';
              }
              _context4.next = 3;
              return this.loadMissingWorkspaceHandle();
            case 3:
              // Trim the leading / from path if there.
              if (path[0] == '/') {
                path = path.slice(1);
              }

              // This is the payload describing the invocation.
              payload = {
                instanceHandle: this.handle,
                payload: {
                  httpVerb: verb,
                  invocationPath: path,
                  arguments: params || {}
                }
              };
              operation = 'package/instance/invoke';
              _context4.next = 8;
              return this.client.post(operation, payload, {
                asBackgroundTask: true
              });
            case 8:
              result = _context4.sent;
              if (!(result != null && (_result$data = result.data) != null && _result$data.status)) {
                _context4.next = 13;
                break;
              }
              return _context4.abrupt("return", new Task(this.client, (_result$data2 = result.data) == null ? void 0 : _result$data2.status));
            case 13:
              if (!(result instanceof Task)) {
                _context4.next = 15;
                break;
              }
              return _context4.abrupt("return", result);
            case 15:
              throw new SteamshipError({
                statusMessage: 'The result from async invocation was lacking the expected .data.status field.'
              });
            case 16:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function invokeAsync(_x6, _x7, _x8) {
        return _invokeAsync.apply(this, arguments);
      }
      return invokeAsync;
    }()
    /**
     * Returns the HTTP invocation URL for a method a Package, to be run in the cloud.
     *
     * @param path - The method name (HTTP path) being invoked. E.g. `greet`
     * @returns string
     */
  }, {
    key: "invocationUrl",
    value: function () {
      var _invocationUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(path) {
        var baseConfig, postConfig;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return this.loadMissingWorkspaceHandle();
            case 2:
              _context5.next = 4;
              return this.client.config;
            case 4:
              baseConfig = _context5.sent;
              postConfig = {
                isPackageCall: true,
                packageOwner: this.userHandle,
                packageId: this.packageId,
                packageInstanceId: this.id,
                rawResponse: true,
                workspaceId: this.workspaceId
              };
              return _context5.abrupt("return", this.client._url(baseConfig, postConfig, path));
            case 7:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function invocationUrl(_x9) {
        return _invocationUrl.apply(this, arguments);
      }
      return invocationUrl;
    }()
  }], [{
    key: "create",
    value: function () {
      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(client, params, config) {
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return client.post('package/instance/create', _extends({}, params), _extends({}, config, {
                expect: _EXPECT,
                responsePath: 'packageInstance'
              }));
            case 2:
              return _context6.abrupt("return", _context6.sent);
            case 3:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }));
      function create(_x10, _x11, _x12) {
        return _create.apply(this, arguments);
      }
      return create;
    }()
  }, {
    key: "get",
    value: function () {
      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(client, params, config) {
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return client.post('package/instance/get', _extends({}, params), _extends({
                expect: _EXPECT,
                responsePath: 'packageInstance'
              }, config));
            case 2:
              return _context7.abrupt("return", _context7.sent);
            case 3:
            case "end":
              return _context7.stop();
          }
        }, _callee7);
      }));
      function get(_x13, _x14, _x15) {
        return _get.apply(this, arguments);
      }
      return get;
    }()
  }, {
    key: "list",
    value: function () {
      var _list = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(client, params, config) {
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return client.post('package/instance/list', _extends({}, params), _extends({
                expect: _EXPECT_LIST
              }, config));
            case 2:
              return _context8.abrupt("return", _context8.sent);
            case 3:
            case "end":
              return _context8.stop();
          }
        }, _callee8);
      }));
      function list(_x16, _x17, _x18) {
        return _list.apply(this, arguments);
      }
      return list;
    }()
  }]);
  return PackageInstance;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,