import { FC, ButtonHTMLAttributes, JSXElementConstructor, AnchorHTMLAttributes } from 'react';
/**
 * All the component types allowed by the Button component.
 */
export declare type ButtonComponentType = 'button' | 'a' | JSXElementConstructor<any>;
/**
 * Base props of the Button component.
 */
export interface ButtonProps<C extends ButtonComponentType = 'button'> {
    href?: string;
    className?: string;
    variant?: 'primary' | 'secondary' | 'ghost' | 'violet' | 'black' | 'white';
    size?: 'sm' | 'md' | 'lg';
    active?: boolean;
    type?: 'submit' | 'reset' | 'button';
    Component?: C;
    width?: string | number;
    loading?: boolean;
    disabled?: boolean;
}
/**
 * The HTML props allowed by the Button component. These
 * props depend on the used component type (C).
 */
export declare type ButtonHTMLType<C extends ButtonComponentType = 'button'> = C extends 'a' ? AnchorHTMLAttributes<HTMLAnchorElement> : ButtonHTMLAttributes<HTMLButtonElement>;
declare type ButtonFC<C extends ButtonComponentType = 'button'> = FC<ButtonHTMLType<C> & ButtonProps<C>>;
declare type ButtonType = <C extends ButtonComponentType = 'button'>(...args: Parameters<ButtonFC<C>>) => ReturnType<ButtonFC<C>>;
declare const _default: ButtonType;
export default _default;
