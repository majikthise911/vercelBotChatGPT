"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/submit_job";
exports.ids = ["pages/api/submit_job"];
exports.modules = {

/***/ "@steamship/steamship-nextjs":
/*!**********************************************!*\
  !*** external "@steamship/steamship-nextjs" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = import("@steamship/steamship-nextjs");;

/***/ }),

/***/ "(api)/./pages/api/submit_job.ts":
/*!*********************************!*\
  !*** ./pages/api/submit_job.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _steamship_steamship_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @steamship/steamship-nextjs */ \"@steamship/steamship-nextjs\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_steamship_steamship_nextjs__WEBPACK_IMPORTED_MODULE_0__]);\n_steamship_steamship_nextjs__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function handler(req, res) {\n    const { messages  } = req.body;\n    if (!messages) {\n        return res.json({\n            error: \"Please enter a message.\"\n        });\n    }\n    const { message , who  } = messages[messages.length - 1];\n    if (!message) {\n        return res.json({\n            error: \"No last message found.\"\n        });\n    }\n    try {\n        // Fetch a stub to the Steamship-hosted backend.\n        // Use a different workspace name per-user to provide data isolation.\n        const uniqueUserToken = \"user-1234\";\n        const packageHandle = process.env.STEAMSHIP_PACKAGE_HANDLE;\n        const workspace = `${packageHandle}-${uniqueUserToken}`;\n        const pkg = await (0,_steamship_steamship_nextjs__WEBPACK_IMPORTED_MODULE_0__.getSteamshipPackage)({\n            workspace: workspace,\n            pkg: packageHandle\n        });\n        // Invoke a method on the package defined in steamship/api.py. Full syntax: pkg.invoke(\"method\", {args}, \"POST\" | \"GET\")\n        // Since we use invokeAsync here, the result will be a task that we can poll. This guarantees the Vercel function\n        // can return quickly without having the paid plan.\n        const resp = await pkg.invokeAsync(\"send_message\", {\n            message: message,\n            chat_history_handle: \"default\" // Note: the bundled chat package provides different chat \"rooms\" with a workspace.\n        });\n        const taskId = resp.taskId;\n        if (!taskId) {\n            return res.json({\n                error: \"No taskId was returned from Steamship\"\n            });\n        } else {\n            return res.json({\n                taskId,\n                workspace\n            });\n        }\n    } catch (ex) {\n        console.log(ex);\n        const awaitedEx = await ex;\n        if (awaitedEx?.response?.data?.status?.statusMessage) {\n            return res.json({\n                error: awaitedEx?.response?.data?.status?.statusMessage\n            });\n        }\n        console.log(typeof awaitedEx);\n        console.log(awaitedEx);\n        return res.json({\n            error: `There was an error responding to your message.`\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc3VibWl0X2pvYi50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNpRTtBQUlsRCxlQUFlQyxRQUM1QkMsR0FBbUIsRUFDbkJDLEdBQXlCLEVBQ3pCO0lBQ0EsTUFBTSxFQUFFQyxTQUFRLEVBQUUsR0FBR0YsSUFBSUcsSUFBSTtJQUU3QixJQUFJLENBQUNELFVBQVU7UUFDYixPQUFPRCxJQUFJRyxJQUFJLENBQUM7WUFBRUMsT0FBTztRQUEwQjtJQUNyRCxDQUFDO0lBRUQsTUFBTSxFQUFDQyxRQUFPLEVBQUVDLElBQUcsRUFBQyxHQUFHTCxRQUFRLENBQUNBLFNBQVNNLE1BQU0sR0FBRyxFQUFFO0lBRXBELElBQUksQ0FBQ0YsU0FBUztRQUNaLE9BQU9MLElBQUlHLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQXlCO0lBQ3BELENBQUM7SUFFRCxJQUFJO1FBQ0YsZ0RBQWdEO1FBQ2hELHFFQUFxRTtRQUNyRSxNQUFNSSxrQkFBa0I7UUFDeEIsTUFBTUMsZ0JBQWdCQyxRQUFRQyxHQUFHLENBQUNDLHdCQUF3QjtRQUMxRCxNQUFNQyxZQUFZLENBQUMsRUFBRUosY0FBYyxDQUFDLEVBQUVELGdCQUFnQixDQUFDO1FBRXZELE1BQU1NLE1BQU0sTUFBTWpCLGdGQUFtQkEsQ0FBQztZQUNwQ2dCLFdBQVdBO1lBQ1hDLEtBQUtMO1FBQ1A7UUFFQSx3SEFBd0g7UUFDeEgsaUhBQWlIO1FBQ2pILG1EQUFtRDtRQUNuRCxNQUFNTSxPQUFrQixNQUFNRCxJQUFJRSxXQUFXLENBQUMsZ0JBQWdCO1lBQzVEWCxTQUFTQTtZQUNUWSxxQkFBcUIsVUFBVSxtRkFBbUY7UUFDcEg7UUFFQSxNQUFNQyxTQUFTSCxLQUFLRyxNQUFNO1FBRTFCLElBQUksQ0FBQ0EsUUFBUTtZQUNYLE9BQU9sQixJQUFJRyxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBdUM7UUFDbEUsT0FBTztZQUNMLE9BQU9KLElBQUlHLElBQUksQ0FBQztnQkFBQ2U7Z0JBQVFMO1lBQVM7UUFDcEMsQ0FBQztJQUNILEVBQUUsT0FBT00sSUFBSTtRQUNYQyxRQUFRQyxHQUFHLENBQUNGO1FBQ1osTUFBTUcsWUFBYSxNQUFNSDtRQUV6QixJQUFJRyxXQUFXQyxVQUFVQyxNQUFNQyxRQUFRQyxlQUFlO1lBQ3BELE9BQU8xQixJQUFJRyxJQUFJLENBQUM7Z0JBQUVDLE9BQU9rQixXQUFXQyxVQUFVQyxNQUFNQyxRQUFRQztZQUFjO1FBQzVFLENBQUM7UUFFRE4sUUFBUUMsR0FBRyxDQUFDLE9BQU9DO1FBQ25CRixRQUFRQyxHQUFHLENBQUNDO1FBRVosT0FBT3RCLElBQUlHLElBQUksQ0FBQztZQUFFQyxPQUFPLENBQUMsOENBQThDLENBQUM7UUFBQztJQUM1RTtBQUVGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWdlcy9hcGkvc3VibWl0X2pvYi50cz85NzgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnXG5pbXBvcnQgeyBnZXRTdGVhbXNoaXBQYWNrYWdlIH0gZnJvbSAnQHN0ZWFtc2hpcC9zdGVhbXNoaXAtbmV4dGpzJ1xuaW1wb3J0IHtUYXNrfSBmcm9tIFwiQHN0ZWFtc2hpcC9jbGllbnRcIjtcblxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKFxuICByZXE6IE5leHRBcGlSZXF1ZXN0LFxuICByZXM6IE5leHRBcGlSZXNwb25zZTxhbnk+XG4pIHtcbiAgY29uc3QgeyBtZXNzYWdlcyB9ID0gcmVxLmJvZHkgYXMgYW55O1xuXG4gIGlmICghbWVzc2FnZXMpIHtcbiAgICByZXR1cm4gcmVzLmpzb24oeyBlcnJvcjogXCJQbGVhc2UgZW50ZXIgYSBtZXNzYWdlLlwiIH0pXG4gIH1cblxuICBjb25zdCB7bWVzc2FnZSwgd2hvfSA9IG1lc3NhZ2VzW21lc3NhZ2VzLmxlbmd0aCAtIDFdXG5cbiAgaWYgKCFtZXNzYWdlKSB7XG4gICAgcmV0dXJuIHJlcy5qc29uKHsgZXJyb3I6IFwiTm8gbGFzdCBtZXNzYWdlIGZvdW5kLlwiIH0pXG4gIH1cblxuICB0cnkge1xuICAgIC8vIEZldGNoIGEgc3R1YiB0byB0aGUgU3RlYW1zaGlwLWhvc3RlZCBiYWNrZW5kLlxuICAgIC8vIFVzZSBhIGRpZmZlcmVudCB3b3Jrc3BhY2UgbmFtZSBwZXItdXNlciB0byBwcm92aWRlIGRhdGEgaXNvbGF0aW9uLlxuICAgIGNvbnN0IHVuaXF1ZVVzZXJUb2tlbiA9IFwidXNlci0xMjM0XCI7XG4gICAgY29uc3QgcGFja2FnZUhhbmRsZSA9IHByb2Nlc3MuZW52LlNURUFNU0hJUF9QQUNLQUdFX0hBTkRMRSBhcyBzdHJpbmc7XG4gICAgY29uc3Qgd29ya3NwYWNlID0gYCR7cGFja2FnZUhhbmRsZX0tJHt1bmlxdWVVc2VyVG9rZW59YDtcblxuICAgIGNvbnN0IHBrZyA9IGF3YWl0IGdldFN0ZWFtc2hpcFBhY2thZ2Uoe1xuICAgICAgd29ya3NwYWNlOiB3b3Jrc3BhY2UsXG4gICAgICBwa2c6IHBhY2thZ2VIYW5kbGVcbiAgICB9KVxuXG4gICAgLy8gSW52b2tlIGEgbWV0aG9kIG9uIHRoZSBwYWNrYWdlIGRlZmluZWQgaW4gc3RlYW1zaGlwL2FwaS5weS4gRnVsbCBzeW50YXg6IHBrZy5pbnZva2UoXCJtZXRob2RcIiwge2FyZ3N9LCBcIlBPU1RcIiB8IFwiR0VUXCIpXG4gICAgLy8gU2luY2Ugd2UgdXNlIGludm9rZUFzeW5jIGhlcmUsIHRoZSByZXN1bHQgd2lsbCBiZSBhIHRhc2sgdGhhdCB3ZSBjYW4gcG9sbC4gVGhpcyBndWFyYW50ZWVzIHRoZSBWZXJjZWwgZnVuY3Rpb25cbiAgICAvLyBjYW4gcmV0dXJuIHF1aWNrbHkgd2l0aG91dCBoYXZpbmcgdGhlIHBhaWQgcGxhbi5cbiAgICBjb25zdCByZXNwOiBUYXNrPGFueT4gPSBhd2FpdCBwa2cuaW52b2tlQXN5bmMoJ3NlbmRfbWVzc2FnZScsIHtcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgICBjaGF0X2hpc3RvcnlfaGFuZGxlOiAnZGVmYXVsdCcgLy8gTm90ZTogdGhlIGJ1bmRsZWQgY2hhdCBwYWNrYWdlIHByb3ZpZGVzIGRpZmZlcmVudCBjaGF0IFwicm9vbXNcIiB3aXRoIGEgd29ya3NwYWNlLlxuICAgIH0pXG5cbiAgICBjb25zdCB0YXNrSWQgPSByZXNwLnRhc2tJZDtcblxuICAgIGlmICghdGFza0lkKSB7XG4gICAgICByZXR1cm4gcmVzLmpzb24oeyBlcnJvcjogXCJObyB0YXNrSWQgd2FzIHJldHVybmVkIGZyb20gU3RlYW1zaGlwXCJ9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHJlcy5qc29uKHt0YXNrSWQsIHdvcmtzcGFjZX0pO1xuICAgIH1cbiAgfSBjYXRjaCAoZXgpIHtcbiAgICBjb25zb2xlLmxvZyhleClcbiAgICBjb25zdCBhd2FpdGVkRXggPSAoYXdhaXQgZXgpIGFzIGFueTtcblxuICAgIGlmIChhd2FpdGVkRXg/LnJlc3BvbnNlPy5kYXRhPy5zdGF0dXM/LnN0YXR1c01lc3NhZ2UpIHtcbiAgICAgIHJldHVybiByZXMuanNvbih7IGVycm9yOiBhd2FpdGVkRXg/LnJlc3BvbnNlPy5kYXRhPy5zdGF0dXM/LnN0YXR1c01lc3NhZ2UgfSlcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZyh0eXBlb2YgYXdhaXRlZEV4KVxuICAgIGNvbnNvbGUubG9nKGF3YWl0ZWRFeClcblxuICAgIHJldHVybiByZXMuanNvbih7IGVycm9yOiBgVGhlcmUgd2FzIGFuIGVycm9yIHJlc3BvbmRpbmcgdG8geW91ciBtZXNzYWdlLmAgfSlcbiAgfVxuXG59XG4iXSwibmFtZXMiOlsiZ2V0U3RlYW1zaGlwUGFja2FnZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXNzYWdlcyIsImJvZHkiLCJqc29uIiwiZXJyb3IiLCJtZXNzYWdlIiwid2hvIiwibGVuZ3RoIiwidW5pcXVlVXNlclRva2VuIiwicGFja2FnZUhhbmRsZSIsInByb2Nlc3MiLCJlbnYiLCJTVEVBTVNISVBfUEFDS0FHRV9IQU5ETEUiLCJ3b3Jrc3BhY2UiLCJwa2ciLCJyZXNwIiwiaW52b2tlQXN5bmMiLCJjaGF0X2hpc3RvcnlfaGFuZGxlIiwidGFza0lkIiwiZXgiLCJjb25zb2xlIiwibG9nIiwiYXdhaXRlZEV4IiwicmVzcG9uc2UiLCJkYXRhIiwic3RhdHVzIiwic3RhdHVzTWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/submit_job.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/submit_job.ts"));
module.exports = __webpack_exports__;

})();